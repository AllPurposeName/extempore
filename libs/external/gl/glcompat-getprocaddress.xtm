;;; glcompat-getprocaddress.xtm -- OpenGL compatibility bindings for Extempore

;; Author: Ben Swift
;; Keywords: extempore
;; Required dylibs: libGL.dylib

;;; Commentary:

;; OpenGL 2.0 is now seriously old, and is only supported through
;; compatibility profiles and such - check the details for your
;; driver. This file is here for compatibility reasons.

;; If you'd prefer to use a more modern OpenGL (version 3.2+) library,
;; then then you should use one of the "core" libs in this folder

;; This file is the "GetProcAddress" version - we assume that libGL
;; doesn't expose the symbols directly, but provides wglGetProcAddress
;; (on Windows) and glxGetProcaddressARB on Linux.

;; This will be required on Windows for OpenGL version > 1.1

;;; Code:

;; Constants

(sys:load "libs/aot-cache/glcompat-getprocaddress.xtm" 'quiet)
(sys:load-preload-check 'gl)
(define *xtmlib-glcompat-getprocaddress-loaded* #f)
(define *xtmlib-gl-loaded* #f)

(impc:aot:suppress-aot-do
 (sys:load "libs/core/std.xtm"))
(impc:aot:insert-forms (sys:load "libs/core/std.xtm" 'quiet))

(impc:aot:insert-header "xtmglcompat-getprocaddress")

(bind-dylib libGL
  (cond ((string=? (sys:platform) "Linux")
         "libGL.so")
        ((string=? (sys:platform) "Windows")
         "opengl32.dll")
        ((string=? (sys:platform) "OSX")
         "/System/Library/Frameworks/OpenGL.framework/OpenGL")))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; BEGIN GL_GET_PROC_ADDRESS HANDLING ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; This library contains some xtlang compiler additions to bind OpenGL
;; functions using the "GetProcAddress" approach. This stuff is pretty
;; messy, although hopefully it makes all the user-facing OpenGL code
;; cleaner.

;; here are some compiler additions to deal with the messiness of
;; using GL extensions in a robust, cross-platform way. It's
;; necessary, but not necessarily nice - so let's keep it isolated in
;; this gl.xtm library

;; the basic idea is that we use a big array to keep track of the
;; OpenGL function pointers, and then create xtlang closures which
;; look up the right function pointer, cast it to the right signature,
;; and then call it with the required arguments

;; here's a big "lookup table" to match an OpenGL procedure name to an
;; index into the function pointer array. To re-create, load the
;; direct-bind version (on a platform where it works, e.g. OSX) and
;; copy the output of:

;; (for-each (let ((count 0))
;;             (lambda (x)
;;               (if (regex:match? (car x) "^gl")
;;                   (begin
;;                     (println (cons (car x) count))
;;                     (set! count (+ count 1))))))
;;           *impc:ti:nativefunc-cache*)

;; **NOTE** if you add/remove any names from this list, make sure you
;; adjust the size of the EXTEMPORE_GL_FUNCTION_POINTER_COUNT global
;; variable further down in this file

(impc:aot:do-and-emit
 (define *impc:ti:gl-proc-alist*
   '(("glViewport" . 0)
     ("glVertexPointer" . 1)
     ("glVertex4sv" . 2)
     ("glVertex4s" . 3)
     ("glVertex4iv" . 4)
     ("glVertex4i" . 5)
     ("glVertex4fv" . 6)
     ("glVertex4f" . 7)
     ("glVertex4dv" . 8)
     ("glVertex4d" . 9)
     ("glVertex3sv" . 10)
     ("glVertex3s" . 11)
     ("glVertex3iv" . 12)
     ("glVertex3i" . 13)
     ("glVertex3fv" . 14)
     ("glVertex3f" . 15)
     ("glVertex3dv" . 16)
     ("glVertex3d" . 17)
     ("glVertex2sv" . 18)
     ("glVertex2s" . 19)
     ("glVertex2iv" . 20)
     ("glVertex2i" . 21)
     ("glVertex2fv" . 22)
     ("glVertex2f" . 23)
     ("glVertex2dv" . 24)
     ("glVertex2d" . 25)
     ("glTranslatef" . 26)
     ("glTranslated" . 27)
     ("glTexSubImage2D" . 28)
     ("glTexSubImage1D" . 29)
     ("glTexParameteriv" . 30)
     ("glTexParameteri" . 31)
     ("glTexParameterfv" . 32)
     ("glTexParameterf" . 33)
     ("glTexImage2D" . 34)
     ("glTexImage1D" . 35)
     ("glTexGeniv" . 36)
     ("glTexGeni" . 37)
     ("glTexGenfv" . 38)
     ("glTexGenf" . 39)
     ("glTexGendv" . 40)
     ("glTexGend" . 41)
     ("glTexEnviv" . 42)
     ("glTexEnvi" . 43)
     ("glTexEnvfv" . 44)
     ("glTexEnvf" . 45)
     ("glTexCoordPointer" . 46)
     ("glTexCoord4sv" . 47)
     ("glTexCoord4s" . 48)
     ("glTexCoord4iv" . 49)
     ("glTexCoord4i" . 50)
     ("glTexCoord4fv" . 51)
     ("glTexCoord4f" . 52)
     ("glTexCoord4dv" . 53)
     ("glTexCoord4d" . 54)
     ("glTexCoord3sv" . 55)
     ("glTexCoord3s" . 56)
     ("glTexCoord3iv" . 57)
     ("glTexCoord3i" . 58)
     ("glTexCoord3fv" . 59)
     ("glTexCoord3f" . 60)
     ("glTexCoord3dv" . 61)
     ("glTexCoord3d" . 62)
     ("glTexCoord2sv" . 63)
     ("glTexCoord2s" . 64)
     ("glTexCoord2iv" . 65)
     ("glTexCoord2i" . 66)
     ("glTexCoord2fv" . 67)
     ("glTexCoord2f" . 68)
     ("glTexCoord2dv" . 69)
     ("glTexCoord2d" . 70)
     ("glTexCoord1sv" . 71)
     ("glTexCoord1s" . 72)
     ("glTexCoord1iv" . 73)
     ("glTexCoord1i" . 74)
     ("glTexCoord1fv" . 75)
     ("glTexCoord1f" . 76)
     ("glTexCoord1dv" . 77)
     ("glTexCoord1d" . 78)
     ("glStencilOp" . 79)
     ("glStencilMask" . 80)
     ("glStencilFunc" . 81)
     ("glShadeModel" . 82)
     ("glSelectBuffer" . 83)
     ("glScissor" . 84)
     ("glScalef" . 85)
     ("glScaled" . 86)
     ("glRotatef" . 87)
     ("glRotated" . 88)
     ("glRenderMode" . 89)
     ("glRectsv" . 90)
     ("glRects" . 91)
     ("glRectiv" . 92)
     ("glRecti" . 93)
     ("glRectfv" . 94)
     ("glRectf" . 95)
     ("glRectdv" . 96)
     ("glRectd" . 97)
     ("glReadPixels" . 98)
     ("glReadBuffer" . 99)
     ("glRasterPos4sv" . 100)
     ("glRasterPos4s" . 101)
     ("glRasterPos4iv" . 102)
     ("glRasterPos4i" . 103)
     ("glRasterPos4fv" . 104)
     ("glRasterPos4f" . 105)
     ("glRasterPos4dv" . 106)
     ("glRasterPos4d" . 107)
     ("glRasterPos3sv" . 108)
     ("glRasterPos3s" . 109)
     ("glRasterPos3iv" . 110)
     ("glRasterPos3i" . 111)
     ("glRasterPos3fv" . 112)
     ("glRasterPos3f" . 113)
     ("glRasterPos3dv" . 114)
     ("glRasterPos3d" . 115)
     ("glRasterPos2sv" . 116)
     ("glRasterPos2s" . 117)
     ("glRasterPos2iv" . 118)
     ("glRasterPos2i" . 119)
     ("glRasterPos2fv" . 120)
     ("glRasterPos2f" . 121)
     ("glRasterPos2dv" . 122)
     ("glRasterPos2d" . 123)
     ("glPushName" . 124)
     ("glPushMatrix" . 125)
     ("glPushClientAttrib" . 126)
     ("glPushAttrib" . 127)
     ("glPrioritizeTextures" . 128)
     ("glPopName" . 129)
     ("glPopMatrix" . 130)
     ("glPopClientAttrib" . 131)
     ("glPopAttrib" . 132)
     ("glPolygonStipple" . 133)
     ("glPolygonOffset" . 134)
     ("glPolygonMode" . 135)
     ("glPointSize" . 136)
     ("glPixelZoom" . 137)
     ("glPixelTransferi" . 138)
     ("glPixelTransferf" . 139)
     ("glPixelStorei" . 140)
     ("glPixelStoref" . 141)
     ("glPixelMapusv" . 142)
     ("glPixelMapuiv" . 143)
     ("glPixelMapfv" . 144)
     ("glPassThrough" . 145)
     ("glOrtho" . 146)
     ("glNormalPointer" . 147)
     ("glNormal3sv" . 148)
     ("glNormal3s" . 149)
     ("glNormal3iv" . 150)
     ("glNormal3i" . 151)
     ("glNormal3fv" . 152)
     ("glNormal3f" . 153)
     ("glNormal3dv" . 154)
     ("glNormal3d" . 155)
     ("glNormal3bv" . 156)
     ("glNormal3b" . 157)
     ("glNewList" . 158)
     ("glMultMatrixf" . 159)
     ("glMultMatrixd" . 160)
     ("glMatrixMode" . 161)
     ("glMaterialiv" . 162)
     ("glMateriali" . 163)
     ("glMaterialfv" . 164)
     ("glMaterialf" . 165)
     ("glMapGrid2f" . 166)
     ("glMapGrid2d" . 167)
     ("glMapGrid1f" . 168)
     ("glMapGrid1d" . 169)
     ("glMap2f" . 170)
     ("glMap2d" . 171)
     ("glMap1f" . 172)
     ("glMap1d" . 173)
     ("glLogicOp" . 174)
     ("glLoadName" . 175)
     ("glLoadMatrixf" . 176)
     ("glLoadMatrixd" . 177)
     ("glLoadIdentity" . 178)
     ("glListBase" . 179)
     ("glLineWidth" . 180)
     ("glLineStipple" . 181)
     ("glLightiv" . 182)
     ("glLighti" . 183)
     ("glLightfv" . 184)
     ("glLightf" . 185)
     ("glLightModeliv" . 186)
     ("glLightModeli" . 187)
     ("glLightModelfv" . 188)
     ("glLightModelf" . 189)
     ("glIsTexture" . 190)
     ("glIsList" . 191)
     ("glIsEnabled" . 192)
     ("glInterleavedArrays" . 193)
     ("glInitNames" . 194)
     ("glIndexubv" . 195)
     ("glIndexub" . 196)
     ("glIndexsv" . 197)
     ("glIndexs" . 198)
     ("glIndexiv" . 199)
     ("glIndexi" . 200)
     ("glIndexfv" . 201)
     ("glIndexf" . 202)
     ("glIndexdv" . 203)
     ("glIndexd" . 204)
     ("glIndexPointer" . 205)
     ("glIndexMask" . 206)
     ("glHint" . 207)
     ("glGetTexParameteriv" . 208)
     ("glGetTexParameterfv" . 209)
     ("glGetTexLevelParameteriv" . 210)
     ("glGetTexLevelParameterfv" . 211)
     ("glGetTexImage" . 212)
     ("glGetTexGeniv" . 213)
     ("glGetTexGenfv" . 214)
     ("glGetTexGendv" . 215)
     ("glGetTexEnviv" . 216)
     ("glGetTexEnvfv" . 217)
     ("glGetPolygonStipple" . 218)
     ("glGetPointerv" . 219)
     ("glGetPixelMapusv" . 220)
     ("glGetPixelMapuiv" . 221)
     ("glGetPixelMapfv" . 222)
     ("glGetMaterialiv" . 223)
     ("glGetMaterialfv" . 224)
     ("glGetMapiv" . 225)
     ("glGetMapfv" . 226)
     ("glGetMapdv" . 227)
     ("glGetLightiv" . 228)
     ("glGetLightfv" . 229)
     ("glGetIntegerv" . 230)
     ("glGetFloatv" . 231)
     ("glGetError" . 232)
     ("glGetDoublev" . 233)
     ("glGetClipPlane" . 234)
     ("glGetBooleanv" . 235)
     ("glGenTextures" . 236)
     ("glGenLists" . 237)
     ("glFrustum" . 238)
     ("glFrontFace" . 239)
     ("glFogiv" . 240)
     ("glFogi" . 241)
     ("glFogfv" . 242)
     ("glFogf" . 243)
     ("glFlush" . 244)
     ("glFinish" . 245)
     ("glFeedbackBuffer" . 246)
     ("glEvalPoint2" . 247)
     ("glEvalPoint1" . 248)
     ("glEvalMesh2" . 249)
     ("glEvalMesh1" . 250)
     ("glEvalCoord2fv" . 251)
     ("glEvalCoord2f" . 252)
     ("glEvalCoord2dv" . 253)
     ("glEvalCoord2d" . 254)
     ("glEvalCoord1fv" . 255)
     ("glEvalCoord1f" . 256)
     ("glEvalCoord1dv" . 257)
     ("glEvalCoord1d" . 258)
     ("glEndList" . 259)
     ("glEnd" . 260)
     ("glEnableClientState" . 261)
     ("glEnable" . 262)
     ("glEdgeFlagv" . 263)
     ("glEdgeFlagPointer" . 264)
     ("glEdgeFlag" . 265)
     ("glDrawPixels" . 266)
     ("glDrawElements" . 267)
     ("glDrawBuffer" . 268)
     ("glDrawArrays" . 269)
     ("glDisableClientState" . 270)
     ("glDisable" . 271)
     ("glDepthRange" . 272)
     ("glDepthMask" . 273)
     ("glDepthFunc" . 274)
     ("glDeleteTextures" . 275)
     ("glDeleteLists" . 276)
     ("glCullFace" . 277)
     ("glCopyTexSubImage2D" . 278)
     ("glCopyTexSubImage1D" . 279)
     ("glCopyTexImage2D" . 280)
     ("glCopyTexImage1D" . 281)
     ("glCopyPixels" . 282)
     ("glColorPointer" . 283)
     ("glColorMaterial" . 284)
     ("glColorMask" . 285)
     ("glColor4usv" . 286)
     ("glColor4us" . 287)
     ("glColor4uiv" . 288)
     ("glColor4ui" . 289)
     ("glColor4ubv" . 290)
     ("glColor4ub" . 291)
     ("glColor4sv" . 292)
     ("glColor4s" . 293)
     ("glColor4iv" . 294)
     ("glColor4i" . 295)
     ("glColor4fv" . 296)
     ("glColor4f" . 297)
     ("glColor4dv" . 298)
     ("glColor4d" . 299)
     ("glColor4bv" . 300)
     ("glColor4b" . 301)
     ("glColor3usv" . 302)
     ("glColor3us" . 303)
     ("glColor3uiv" . 304)
     ("glColor3ui" . 305)
     ("glColor3ubv" . 306)
     ("glColor3ub" . 307)
     ("glColor3sv" . 308)
     ("glColor3s" . 309)
     ("glColor3iv" . 310)
     ("glColor3i" . 311)
     ("glColor3fv" . 312)
     ("glColor3f" . 313)
     ("glColor3dv" . 314)
     ("glColor3d" . 315)
     ("glColor3bv" . 316)
     ("glColor3b" . 317)
     ("glClipPlane" . 318)
     ("glClearStencil" . 319)
     ("glClearIndex" . 320)
     ("glClearDepth" . 321)
     ("glClearColor" . 322)
     ("glClearAccum" . 323)
     ("glClear" . 324)
     ("glCallLists" . 325)
     ("glCallList" . 326)
     ("glBlendFunc" . 327)
     ("glBitmap" . 328)
     ("glBindTexture" . 329)
     ("glBegin" . 330)
     ("glArrayElement" . 331)
     ("glAreTexturesResident" . 332)
     ("glAlphaFunc" . 333)
     ("glAccum" . 334))))

(define impc:ti:gl-proc-alist-index
  (let ()
    (lambda (gl-proc-name)
      (let ((res (assoc-strcmp gl-proc-name *impc:ti:gl-proc-alist*)))
        (if res (cdr res) #f)))))

(define impc:aot:insert-gl-proc-binding-details
  (lambda (lib-name proc-name type docstring)
    (if (and (output-port? *impc:aot:current-output-port*)
             ;; ignore the binding if we're just binding something
             ;; from an Extempore AOT-compiled library
             (not (and (>= (string-length (atom->string lib-name)) 3)
                       (string=? "xtm" (substring (atom->string lib-name) 0 3)))))
        (begin
          (write
           (list 'bind-gl-proc lib-name proc-name type docstring)
           *impc:aot:current-output-port*)
          (newline *impc:aot:current-output-port*)))))

(define glwrapper-arg-list-symbols
  (lambda (arity)
    (map (lambda (i)
           (string->symbol (string-append "arg" (number->string (+ i 1)))))
         (range arity))))

(define-macro (bind-gl-proc gl-lib proc-name type . args)
  (let* ((arg-types (cddr (impc:ir:get-type-from-pretty-str (symbol->string type))))
         (arg-list (glwrapper-arg-list-symbols (length arg-types))))
    `(eval (bind-func ,proc-name
             ;; docstring
             ,(if (and (not (null? args)) (string? (car args)))
                  (car args)
                  "")
             (lambda ,arg-list
               (fptrcall (cast (aref EXTEMPORE_GL_FUNCTION_POINTERS
                                     ,(impc:ti:gl-proc-alist-index (symbol->string proc-name)))
                               ,type)
                         ,@arg-list)))
           (interaction-environment))))

;; (impc:ti:register-new-builtin
;;  "bind-gl-proc"
;;  ""
;;  "bind an OpenGL procedure"
;;  '(libname function-name type optional-docstring))

(let ((platform (sys:platform)))
  (cond ((string=? platform "OSX")
         (eval '(bind-func gl_get_proc_address
                  (lambda (lib:i8* name:i8*)
                    (if (not (null? lib))
                        (dlsym lib name)
                        null)))
               (interaction-environment)))

        ((string=? platform "Linux")
         (eval '(bind-lib libGL glXGetProcAddressARB [i8*,i8*]*)
               (interaction-environment))
         (eval '(bind-func gl_get_proc_address
                  (lambda (lib:i8* name:i8*)
                    (glXGetProcAddressARB name)))
               (interaction-environment)))

        ((string=? platform "Windows")
         (eval '(bind-lib libGL wglGetProcAddress [i8*,i8*]*)
               (interaction-environment))
         (eval '(bind-func gl_get_proc_address
                  (lambda (lib:i8* name:i8*)
                    (wglGetProcAddress name)))
               (interaction-environment)))

        (else (impc:compiler:print-compiler-error
               "unknown platform, cannot load platform-specific gl_get_proc_address for OpenGL"))))

;; if you change this, change the size of
;; EXTEMPORE_GL_FUNCTION_POINTERS as well!
(bind-val EXTEMPORE_GL_FUNCTION_POINTER_COUNT i64 335
  "the size of the EXTEMPORE_GL_FUNCTION_POINTERS array

equal to (length *impc:ti:gl-proc-alist*)")

(bind-val EXTEMPORE_GL_FUNCTION_POINTERS |335,i8*|
  "global i8* array for storing OpenGL function pointers")

(bind-func gl_set_proc_address
  (lambda (index proc-fptr)
    (if (or (< index 0)
            (> index (- EXTEMPORE_GL_FUNCTION_POINTER_COUNT 1)))
        (println "Error in gl_set_proc_address: index must be between 0 and EXTEMPORE_GL_FUNCTION_POINTER_COUNT")
        (begin
          (aset! EXTEMPORE_GL_FUNCTION_POINTERS index proc-fptr)
          void))))

;; it would be nice if this was an xtlang function, but for now the
;; list of gl proc names is in Scheme
(impc:aot:do-and-emit
 (define gl_init
   (lambda (gl-lib . warn?)
     (print "Initialising OpenGL function pointers... ")
     (for-each (lambda (proc-pair)
                 (let* ((proc-ptr (gl_get_proc_address gl-lib (car proc-pair))))
                   (if (and (not (null? warn?)) warn? (string=? (cptr->string proc-ptr) ""))
                       (print "Warning: OpenGL proc address is null for " (car proc-pair) "\n"))
                   (gl_set_proc_address (cdr proc-pair) proc-ptr)))
               *impc:ti:gl-proc-alist*)
     (print "done\n"))))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; END GL_GET_PROC_ADDRESS HANDLING ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; and now, on with the show!


(bind-alias GLenum i32)
(bind-alias GLboolean i8)
(bind-alias GLbitfield i32)
(bind-alias GLbyte i8)
(bind-alias GLchar i8)
(bind-alias GLshort i16)
(bind-alias GLint i32)
(bind-alias GLsizei i32)
(bind-alias GLubyte i8)
(bind-alias GLushort i16)
(bind-alias GLuint i32)
(bind-alias GLfloat float)
(bind-alias GLclampf float)
(bind-alias GLdouble double)
(bind-alias GLclampd double)
(bind-alias GLvoid i8)

;; /* Version */
(bind-val GL_VERSION_1_1 i32 1)

;; /* AccumOp */
(bind-val GL_ACCUM i32 #x0100)
(bind-val GL_LOAD i32 #x0101)
(bind-val GL_RETURN i32 #x0102)
(bind-val GL_MULT i32 #x0103)
(bind-val GL_ADD i32 #x0104)

;; /* AlphaFunction */
(bind-val GL_NEVER i32 #x0200)
(bind-val GL_LESS i32 #x0201)
(bind-val GL_EQUAL i32 #x0202)
(bind-val GL_LEQUAL i32 #x0203)
(bind-val GL_GREATER i32 #x0204)
(bind-val GL_NOTEQUAL i32 #x0205)
(bind-val GL_GEQUAL i32 #x0206)
(bind-val GL_ALWAYS i32 #x0207)

;; /* AttribMask */
(bind-val GL_CURRENT_BIT i32 #x00000001)
(bind-val GL_POINT_BIT i32 #x00000002)
(bind-val GL_LINE_BIT i32 #x00000004)
(bind-val GL_POLYGON_BIT i32 #x00000008)
(bind-val GL_POLYGON_STIPPLE_BIT i32 #x00000010)
(bind-val GL_PIXEL_MODE_BIT i32 #x00000020)
(bind-val GL_LIGHTING_BIT i32 #x00000040)
(bind-val GL_FOG_BIT i32 #x00000080)
(bind-val GL_DEPTH_BUFFER_BIT i32 #x00000100)
(bind-val GL_ACCUM_BUFFER_BIT i32 #x00000200)
(bind-val GL_STENCIL_BUFFER_BIT i32 #x00000400)
(bind-val GL_VIEWPORT_BIT i32 #x00000800)
(bind-val GL_TRANSFORM_BIT i32 #x00001000)
(bind-val GL_ENABLE_BIT i32 #x00002000)
(bind-val GL_COLOR_BUFFER_BIT i32 #x00004000)
(bind-val GL_HINT_BIT i32 #x00008000)
(bind-val GL_EVAL_BIT i32 #x00010000)
(bind-val GL_LIST_BIT i32 #x00020000)
(bind-val GL_TEXTURE_BIT i32 #x00040000)
(bind-val GL_SCISSOR_BIT i32 #x00080000)
(bind-val GL_ALL_ATTRIB_BITS i32 #x000fffff)

;; /* BeginMode */
(bind-val GL_POINTS i32 #x0000)
(bind-val GL_LINES i32 #x0001)
(bind-val GL_LINE_LOOP i32 #x0002)
(bind-val GL_LINE_STRIP i32 #x0003)
(bind-val GL_TRIANGLES i32 #x0004)
(bind-val GL_TRIANGLE_STRIP i32 #x0005)
(bind-val GL_TRIANGLE_FAN i32 #x0006)
(bind-val GL_QUADS i32 #x0007)
(bind-val GL_QUAD_STRIP i32 #x0008)
(bind-val GL_POLYGON i32 #x0009)

;; /* BlendingFactorDest */
(bind-val GL_ZERO i32 0)
(bind-val GL_ONE i32 1)
(bind-val GL_SRC_COLOR i32 #x0300)
(bind-val GL_ONE_MINUS_SRC_COLOR i32 #x0301)
(bind-val GL_SRC_ALPHA i32 #x0302)
(bind-val GL_ONE_MINUS_SRC_ALPHA i32 #x0303)
(bind-val GL_DST_ALPHA i32 #x0304)
(bind-val GL_ONE_MINUS_DST_ALPHA i32 #x0305)

;; /* BlendingFactorSrc */
;; /*      GL_ZERO */
;; /*      GL_ONE */
(bind-val GL_DST_COLOR i32 #x0306)
(bind-val GL_ONE_MINUS_DST_COLOR i32 #x0307)
(bind-val GL_SRC_ALPHA_SATURATE i32 #x0308)
;; /*      GL_SRC_ALPHA */
;; /*      GL_ONE_MINUS_SRC_ALPHA */
;; /*      GL_DST_ALPHA */
;; /*      GL_ONE_MINUS_DST_ALPHA */

;; /* Boolean */
(bind-val GL_TRUE i32 1)
(bind-val GL_FALSE i32 0)

;; /* ClearBufferMask */
;; /*      GL_COLOR_BUFFER_BIT */
;; /*      GL_ACCUM_BUFFER_BIT */
;; /*      GL_STENCIL_BUFFER_BIT */
;; /*      GL_DEPTH_BUFFER_BIT */

;; /* ClientArrayType */
;; /*      GL_VERTEX_ARRAY */
;; /*      GL_NORMAL_ARRAY */
;; /*      GL_COLOR_ARRAY */
;; /*      GL_INDEX_ARRAY */
;; /*      GL_TEXTURE_COORD_ARRAY */
;; /*      GL_EDGE_FLAG_ARRAY */

;; /* ClipPlaneName */
(bind-val GL_CLIP_PLANE0 i32 #x3000)
(bind-val GL_CLIP_PLANE1 i32 #x3001)
(bind-val GL_CLIP_PLANE2 i32 #x3002)
(bind-val GL_CLIP_PLANE3 i32 #x3003)
(bind-val GL_CLIP_PLANE4 i32 #x3004)
(bind-val GL_CLIP_PLANE5 i32 #x3005)

;; /* ColorMaterialFace */
;; /*      GL_FRONT */
;; /*      GL_BACK */
;; /*      GL_FRONT_AND_BACK */

;; /* ColorMaterialParameter */
;; /*      GL_AMBIENT */
;; /*      GL_DIFFUSE */
;; /*      GL_SPECULAR */
;; /*      GL_EMISSION */
;; /*      GL_AMBIENT_AND_DIFFUSE */

;; /* ColorPointerType */
;; /*      GL_BYTE */
;; /*      GL_UNSIGNED_BYTE */
;; /*      GL_SHORT */
;; /*      GL_UNSIGNED_SHORT */
;; /*      GL_INT */
;; /*      GL_UNSIGNED_INT */
;; /*      GL_FLOAT */
;; /*      GL_DOUBLE */

;; /* CullFaceMode */
;; /*      GL_FRONT */
;; /*      GL_BACK */
;; /*      GL_FRONT_AND_BACK */

;; /* DataType */
(bind-val GL_BYTE i32 #x1400)
(bind-val GL_UNSIGNED_BYTE i32 #x1401)
(bind-val GL_SHORT i32 #x1402)
(bind-val GL_UNSIGNED_SHORT i32 #x1403)
(bind-val GL_INT i32 #x1404)
(bind-val GL_UNSIGNED_INT i32 #x1405)
(bind-val GL_FLOAT i32 #x1406)
(bind-val GL_2_BYTES i32 #x1407)
(bind-val GL_3_BYTES i32 #x1408)
(bind-val GL_4_BYTES i32 #x1409)
(bind-val GL_DOUBLE i32 #x140A)

;; /* DepthFunction */
;; /*      GL_NEVER */
;; /*      GL_LESS */
;; /*      GL_EQUAL */
;; /*      GL_LEQUAL */
;; /*      GL_GREATER */
;; /*      GL_NOTEQUAL */
;; /*      GL_GEQUAL */
;; /*      GL_ALWAYS */

;; /* DrawBufferMode */
(bind-val GL_NONE i32 0)
(bind-val GL_FRONT_LEFT i32 #x0400)
(bind-val GL_FRONT_RIGHT i32 #x0401)
(bind-val GL_BACK_LEFT i32 #x0402)
(bind-val GL_BACK_RIGHT i32 #x0403)
(bind-val GL_FRONT i32 #x0404)
(bind-val GL_BACK i32 #x0405)
(bind-val GL_LEFT i32 #x0406)
(bind-val GL_RIGHT i32 #x0407)
(bind-val GL_FRONT_AND_BACK i32 #x0408)
(bind-val GL_AUX0 i32 #x0409)
(bind-val GL_AUX1 i32 #x040A)
(bind-val GL_AUX2 i32 #x040B)
(bind-val GL_AUX3 i32 #x040C)

;; /* Enable */
;; /*      GL_FOG */
;; /*      GL_LIGHTING */
;; /*      GL_TEXTURE_1D */
;; /*      GL_TEXTURE_2D */
;; /*      GL_LINE_STIPPLE */
;; /*      GL_POLYGON_STIPPLE */
;; /*      GL_CULL_FACE */
;; /*      GL_ALPHA_TEST */
;; /*      GL_BLEND */
;; /*      GL_INDEX_LOGIC_OP */
;; /*      GL_COLOR_LOGIC_OP */
;; /*      GL_DITHER */
;; /*      GL_STENCIL_TEST */
;; /*      GL_DEPTH_TEST */
;; /*      GL_CLIP_PLANE0 */
;; /*      GL_CLIP_PLANE1 */
;; /*      GL_CLIP_PLANE2 */
;; /*      GL_CLIP_PLANE3 */
;; /*      GL_CLIP_PLANE4 */
;; /*      GL_CLIP_PLANE5 */
;; /*      GL_LIGHT0 */
;; /*      GL_LIGHT1 */
;; /*      GL_LIGHT2 */
;; /*      GL_LIGHT3 */
;; /*      GL_LIGHT4 */
;; /*      GL_LIGHT5 */
;; /*      GL_LIGHT6 */
;; /*      GL_LIGHT7 */
;; /*      GL_TEXTURE_GEN_S */
;; /*      GL_TEXTURE_GEN_T */
;; /*      GL_TEXTURE_GEN_R */
;; /*      GL_TEXTURE_GEN_Q */
;; /*      GL_MAP1_VERTEX_3 */
;; /*      GL_MAP1_VERTEX_4 */
;; /*      GL_MAP1_COLOR_4 */
;; /*      GL_MAP1_INDEX */
;; /*      GL_MAP1_NORMAL */
;; /*      GL_MAP1_TEXTURE_COORD_1 */
;; /*      GL_MAP1_TEXTURE_COORD_2 */
;; /*      GL_MAP1_TEXTURE_COORD_3 */
;; /*      GL_MAP1_TEXTURE_COORD_4 */
;; /*      GL_MAP2_VERTEX_3 */
;; /*      GL_MAP2_VERTEX_4 */
;; /*      GL_MAP2_COLOR_4 */
;; /*      GL_MAP2_INDEX */
;; /*      GL_MAP2_NORMAL */
;; /*      GL_MAP2_TEXTURE_COORD_1 */
;; /*      GL_MAP2_TEXTURE_COORD_2 */
;; /*      GL_MAP2_TEXTURE_COORD_3 */
;; /*      GL_MAP2_TEXTURE_COORD_4 */
;; /*      GL_POINT_SMOOTH */
;; /*      GL_LINE_SMOOTH */
;; /*      GL_POLYGON_SMOOTH */
;; /*      GL_SCISSOR_TEST */
;; /*      GL_COLOR_MATERIAL */
;; /*      GL_NORMALIZE */
;; /*      GL_AUTO_NORMAL */
;; /*      GL_VERTEX_ARRAY */
;; /*      GL_NORMAL_ARRAY */
;; /*      GL_COLOR_ARRAY */
;; /*      GL_INDEX_ARRAY */
;; /*      GL_TEXTURE_COORD_ARRAY */
;; /*      GL_EDGE_FLAG_ARRAY */
;; /*      GL_POLYGON_OFFSET_POINT */
;; /*      GL_POLYGON_OFFSET_LINE */
;; /*      GL_POLYGON_OFFSET_FILL */

;; /* ErrorCode */
(bind-val GL_NO_ERROR i32 0)
(bind-val GL_INVALID_ENUM i32 #x0500)
(bind-val GL_INVALID_VALUE i32 #x0501)
(bind-val GL_INVALID_OPERATION i32 #x0502)
(bind-val GL_STACK_OVERFLOW i32 #x0503)
(bind-val GL_STACK_UNDERFLOW i32 #x0504)
(bind-val GL_OUT_OF_MEMORY i32 #x0505)

;; /* FeedBackMode */
(bind-val GL_2D i32 #x0600)
(bind-val GL_3D i32 #x0601)
(bind-val GL_3D_COLOR i32 #x0602)
(bind-val GL_3D_COLOR_TEXTURE i32 #x0603)
(bind-val GL_4D_COLOR_TEXTURE i32 #x0604)

;; /* FeedBackToken */
(bind-val GL_PASS_THROUGH_TOKEN i32 #x0700)
(bind-val GL_POINT_TOKEN i32 #x0701)
(bind-val GL_LINE_TOKEN i32 #x0702)
(bind-val GL_POLYGON_TOKEN i32 #x0703)
(bind-val GL_BITMAP_TOKEN i32 #x0704)
(bind-val GL_DRAW_PIXEL_TOKEN i32 #x0705)
(bind-val GL_COPY_PIXEL_TOKEN i32 #x0706)
(bind-val GL_LINE_RESET_TOKEN i32 #x0707)

;; /* FogMode */
;; /*      GL_LINEAR */
(bind-val GL_EXP i32 #x0800)
(bind-val GL_EXP2 i32 #x0801)


;; /* FogParameter */
;; /*      GL_FOG_COLOR */
;; /*      GL_FOG_DENSITY */
;; /*      GL_FOG_END */
;; /*      GL_FOG_INDEX */
;; /*      GL_FOG_MODE */
;; /*      GL_FOG_START */

;; /* FrontFaceDirection */
(bind-val GL_CW i32 #x0900)
(bind-val GL_CCW i32 #x0901)

;; /* GetMapTarget */
(bind-val GL_COEFF i32 #x0A00)
(bind-val GL_ORDER i32 #x0A01)
(bind-val GL_DOMAIN i32 #x0A02)

;; /* GetPixelMap */
;; /*      GL_PIXEL_MAP_I_TO_I */
;; /*      GL_PIXEL_MAP_S_TO_S */
;; /*      GL_PIXEL_MAP_I_TO_R */
;; /*      GL_PIXEL_MAP_I_TO_G */
;; /*      GL_PIXEL_MAP_I_TO_B */
;; /*      GL_PIXEL_MAP_I_TO_A */
;; /*      GL_PIXEL_MAP_R_TO_R */
;; /*      GL_PIXEL_MAP_G_TO_G */
;; /*      GL_PIXEL_MAP_B_TO_B */
;; /*      GL_PIXEL_MAP_A_TO_A */

;; /* GetPointerTarget */
;; /*      GL_VERTEX_ARRAY_POINTER */
;; /*      GL_NORMAL_ARRAY_POINTER */
;; /*      GL_COLOR_ARRAY_POINTER */
;; /*      GL_INDEX_ARRAY_POINTER */
;; /*      GL_TEXTURE_COORD_ARRAY_POINTER */
;; /*      GL_EDGE_FLAG_ARRAY_POINTER */

;; /* GetTarget */
(bind-val GL_CURRENT_COLOR i32 #x0B00)
(bind-val GL_CURRENT_INDEX i32 #x0B01)
(bind-val GL_CURRENT_NORMAL i32 #x0B02)
(bind-val GL_CURRENT_TEXTURE_COORDS i32 #x0B03)
(bind-val GL_CURRENT_RASTER_COLOR i32 #x0B04)
(bind-val GL_CURRENT_RASTER_INDEX i32 #x0B05)
(bind-val GL_CURRENT_RASTER_TEXTURE_COORDS i32 #x0B06)
(bind-val GL_CURRENT_RASTER_POSITION i32 #x0B07)
(bind-val GL_CURRENT_RASTER_POSITION_VALID i32 #x0B08)
(bind-val GL_CURRENT_RASTER_DISTANCE i32 #x0B09)
(bind-val GL_POINT_SMOOTH i32 #x0B10)
(bind-val GL_POINT_SIZE i32 #x0B11)
(bind-val GL_POINT_SIZE_RANGE i32 #x0B12)
(bind-val GL_POINT_SIZE_GRANULARITY i32 #x0B13)
(bind-val GL_LINE_SMOOTH i32 #x0B20)
(bind-val GL_LINE_WIDTH i32 #x0B21)
(bind-val GL_LINE_WIDTH_RANGE i32 #x0B22)
(bind-val GL_LINE_WIDTH_GRANULARITY i32 #x0B23)
(bind-val GL_LINE_STIPPLE i32 #x0B24)
(bind-val GL_LINE_STIPPLE_PATTERN i32 #x0B25)
(bind-val GL_LINE_STIPPLE_REPEAT i32 #x0B26)
(bind-val GL_LIST_MODE i32 #x0B30)
(bind-val GL_MAX_LIST_NESTING i32 #x0B31)
(bind-val GL_LIST_BASE i32 #x0B32)
(bind-val GL_LIST_INDEX i32 #x0B33)
(bind-val GL_POLYGON_MODE i32 #x0B40)
(bind-val GL_POLYGON_SMOOTH i32 #x0B41)
(bind-val GL_POLYGON_STIPPLE i32 #x0B42)
(bind-val GL_EDGE_FLAG i32 #x0B43)
(bind-val GL_CULL_FACE i32 #x0B44)
(bind-val GL_CULL_FACE_MODE i32 #x0B45)
(bind-val GL_FRONT_FACE i32 #x0B46)
(bind-val GL_LIGHTING i32 #x0B50)
(bind-val GL_LIGHT_MODEL_LOCAL_VIEWER i32 #x0B51)
(bind-val GL_LIGHT_MODEL_TWO_SIDE i32 #x0B52)
(bind-val GL_LIGHT_MODEL_AMBIENT i32 #x0B53)
(bind-val GL_SHADE_MODEL i32 #x0B54)
(bind-val GL_COLOR_MATERIAL_FACE i32 #x0B55)
(bind-val GL_COLOR_MATERIAL_PARAMETER i32 #x0B56)
(bind-val GL_COLOR_MATERIAL i32 #x0B57)
(bind-val GL_FOG i32 #x0B60)
(bind-val GL_FOG_INDEX i32 #x0B61)
(bind-val GL_FOG_DENSITY i32 #x0B62)
(bind-val GL_FOG_START i32 #x0B63)
(bind-val GL_FOG_END i32 #x0B64)
(bind-val GL_FOG_MODE i32 #x0B65)
(bind-val GL_FOG_COLOR i32 #x0B66)
(bind-val GL_DEPTH_RANGE i32 #x0B70)
(bind-val GL_DEPTH_TEST i32 #x0B71)
(bind-val GL_DEPTH_WRITEMASK i32 #x0B72)
(bind-val GL_DEPTH_CLEAR_VALUE i32 #x0B73)
(bind-val GL_DEPTH_FUNC i32 #x0B74)
(bind-val GL_ACCUM_CLEAR_VALUE i32 #x0B80)
(bind-val GL_STENCIL_TEST i32 #x0B90)
(bind-val GL_STENCIL_CLEAR_VALUE i32 #x0B91)
(bind-val GL_STENCIL_FUNC i32 #x0B92)
(bind-val GL_STENCIL_VALUE_MASK i32 #x0B93)
(bind-val GL_STENCIL_FAIL i32 #x0B94)
(bind-val GL_STENCIL_PASS_DEPTH_FAIL i32 #x0B95)
(bind-val GL_STENCIL_PASS_DEPTH_PASS i32 #x0B96)
(bind-val GL_STENCIL_REF i32 #x0B97)
(bind-val GL_STENCIL_WRITEMASK i32 #x0B98)
(bind-val GL_MATRIX_MODE i32 #x0BA0)
(bind-val GL_NORMALIZE i32 #x0BA1)
(bind-val GL_VIEWPORT i32 #x0BA2)
(bind-val GL_MODELVIEW_STACK_DEPTH i32 #x0BA3)
(bind-val GL_PROJECTION_STACK_DEPTH i32 #x0BA4)
(bind-val GL_TEXTURE_STACK_DEPTH i32 #x0BA5)
(bind-val GL_MODELVIEW_MATRIX i32 #x0BA6)
(bind-val GL_PROJECTION_MATRIX i32 #x0BA7)
(bind-val GL_TEXTURE_MATRIX i32 #x0BA8)
(bind-val GL_ATTRIB_STACK_DEPTH i32 #x0BB0)
(bind-val GL_CLIENT_ATTRIB_STACK_DEPTH i32 #x0BB1)
(bind-val GL_ALPHA_TEST i32 #x0BC0)
(bind-val GL_ALPHA_TEST_FUNC i32 #x0BC1)
(bind-val GL_ALPHA_TEST_REF i32 #x0BC2)
(bind-val GL_DITHER i32 #x0BD0)
(bind-val GL_BLEND_DST i32 #x0BE0)
(bind-val GL_BLEND_SRC i32 #x0BE1)
(bind-val GL_BLEND i32 #x0BE2)
(bind-val GL_LOGIC_OP_MODE i32 #x0BF0)
(bind-val GL_INDEX_LOGIC_OP i32 #x0BF1)
(bind-val GL_COLOR_LOGIC_OP i32 #x0BF2)
(bind-val GL_AUX_BUFFERS i32 #x0C00)
(bind-val GL_DRAW_BUFFER i32 #x0C01)
(bind-val GL_READ_BUFFER i32 #x0C02)
(bind-val GL_SCISSOR_BOX i32 #x0C10)
(bind-val GL_SCISSOR_TEST i32 #x0C11)
(bind-val GL_INDEX_CLEAR_VALUE i32 #x0C20)
(bind-val GL_INDEX_WRITEMASK i32 #x0C21)
(bind-val GL_COLOR_CLEAR_VALUE i32 #x0C22)
(bind-val GL_COLOR_WRITEMASK i32 #x0C23)
(bind-val GL_INDEX_MODE i32 #x0C30)
(bind-val GL_RGBA_MODE i32 #x0C31)
(bind-val GL_DOUBLEBUFFER i32 #x0C32)
(bind-val GL_STEREO i32 #x0C33)
(bind-val GL_RENDER_MODE i32 #x0C40)
(bind-val GL_PERSPECTIVE_CORRECTION_HINT i32 #x0C50)
(bind-val GL_POINT_SMOOTH_HINT i32 #x0C51)
(bind-val GL_LINE_SMOOTH_HINT i32 #x0C52)
(bind-val GL_POLYGON_SMOOTH_HINT i32 #x0C53)
(bind-val GL_FOG_HINT i32 #x0C54)
(bind-val GL_TEXTURE_GEN_S i32 #x0C60)
(bind-val GL_TEXTURE_GEN_T i32 #x0C61)
(bind-val GL_TEXTURE_GEN_R i32 #x0C62)
(bind-val GL_TEXTURE_GEN_Q i32 #x0C63)
(bind-val GL_PIXEL_MAP_I_TO_I i32 #x0C70)
(bind-val GL_PIXEL_MAP_S_TO_S i32 #x0C71)
(bind-val GL_PIXEL_MAP_I_TO_R i32 #x0C72)
(bind-val GL_PIXEL_MAP_I_TO_G i32 #x0C73)
(bind-val GL_PIXEL_MAP_I_TO_B i32 #x0C74)
(bind-val GL_PIXEL_MAP_I_TO_A i32 #x0C75)
(bind-val GL_PIXEL_MAP_R_TO_R i32 #x0C76)
(bind-val GL_PIXEL_MAP_G_TO_G i32 #x0C77)
(bind-val GL_PIXEL_MAP_B_TO_B i32 #x0C78)
(bind-val GL_PIXEL_MAP_A_TO_A i32 #x0C79)
(bind-val GL_PIXEL_MAP_I_TO_I_SIZE i32 #x0CB0)
(bind-val GL_PIXEL_MAP_S_TO_S_SIZE i32 #x0CB1)
(bind-val GL_PIXEL_MAP_I_TO_R_SIZE i32 #x0CB2)
(bind-val GL_PIXEL_MAP_I_TO_G_SIZE i32 #x0CB3)
(bind-val GL_PIXEL_MAP_I_TO_B_SIZE i32 #x0CB4)
(bind-val GL_PIXEL_MAP_I_TO_A_SIZE i32 #x0CB5)
(bind-val GL_PIXEL_MAP_R_TO_R_SIZE i32 #x0CB6)
(bind-val GL_PIXEL_MAP_G_TO_G_SIZE i32 #x0CB7)
(bind-val GL_PIXEL_MAP_B_TO_B_SIZE i32 #x0CB8)
(bind-val GL_PIXEL_MAP_A_TO_A_SIZE i32 #x0CB9)
(bind-val GL_UNPACK_SWAP_BYTES i32 #x0CF0)
(bind-val GL_UNPACK_LSB_FIRST i32 #x0CF1)
(bind-val GL_UNPACK_ROW_LENGTH i32 #x0CF2)
(bind-val GL_UNPACK_SKIP_ROWS i32 #x0CF3)
(bind-val GL_UNPACK_SKIP_PIXELS i32 #x0CF4)
(bind-val GL_UNPACK_ALIGNMENT i32 #x0CF5)
(bind-val GL_PACK_SWAP_BYTES i32 #x0D00)
(bind-val GL_PACK_LSB_FIRST i32 #x0D01)
(bind-val GL_PACK_ROW_LENGTH i32 #x0D02)
(bind-val GL_PACK_SKIP_ROWS i32 #x0D03)
(bind-val GL_PACK_SKIP_PIXELS i32 #x0D04)
(bind-val GL_PACK_ALIGNMENT i32 #x0D05)
(bind-val GL_MAP_COLOR i32 #x0D10)
(bind-val GL_MAP_STENCIL i32 #x0D11)
(bind-val GL_INDEX_SHIFT i32 #x0D12)
(bind-val GL_INDEX_OFFSET i32 #x0D13)
(bind-val GL_RED_SCALE i32 #x0D14)
(bind-val GL_RED_BIAS i32 #x0D15)
(bind-val GL_ZOOM_X i32 #x0D16)
(bind-val GL_ZOOM_Y i32 #x0D17)
(bind-val GL_GREEN_SCALE i32 #x0D18)
(bind-val GL_GREEN_BIAS i32 #x0D19)
(bind-val GL_BLUE_SCALE i32 #x0D1A)
(bind-val GL_BLUE_BIAS i32 #x0D1B)
(bind-val GL_ALPHA_SCALE i32 #x0D1C)
(bind-val GL_ALPHA_BIAS i32 #x0D1D)
(bind-val GL_DEPTH_SCALE i32 #x0D1E)
(bind-val GL_DEPTH_BIAS i32 #x0D1F)
(bind-val GL_MAX_EVAL_ORDER i32 #x0D30)
(bind-val GL_MAX_LIGHTS i32 #x0D31)
(bind-val GL_MAX_CLIP_PLANES i32 #x0D32)
(bind-val GL_MAX_TEXTURE_SIZE i32 #x0D33)
(bind-val GL_MAX_PIXEL_MAP_TABLE i32 #x0D34)
(bind-val GL_MAX_ATTRIB_STACK_DEPTH i32 #x0D35)
(bind-val GL_MAX_MODELVIEW_STACK_DEPTH i32 #x0D36)
(bind-val GL_MAX_NAME_STACK_DEPTH i32 #x0D37)
(bind-val GL_MAX_PROJECTION_STACK_DEPTH i32 #x0D38)
(bind-val GL_MAX_TEXTURE_STACK_DEPTH i32 #x0D39)
(bind-val GL_MAX_VIEWPORT_DIMS i32 #x0D3A)
(bind-val GL_MAX_CLIENT_ATTRIB_STACK_DEPTH i32 #x0D3B)
(bind-val GL_SUBPIXEL_BITS i32 #x0D50)
(bind-val GL_INDEX_BITS i32 #x0D51)
(bind-val GL_RED_BITS i32 #x0D52)
(bind-val GL_GREEN_BITS i32 #x0D53)
(bind-val GL_BLUE_BITS i32 #x0D54)
(bind-val GL_ALPHA_BITS i32 #x0D55)
(bind-val GL_DEPTH_BITS i32 #x0D56)
(bind-val GL_STENCIL_BITS i32 #x0D57)
(bind-val GL_ACCUM_RED_BITS i32 #x0D58)
(bind-val GL_ACCUM_GREEN_BITS i32 #x0D59)
(bind-val GL_ACCUM_BLUE_BITS i32 #x0D5A)
(bind-val GL_ACCUM_ALPHA_BITS i32 #x0D5B)
(bind-val GL_NAME_STACK_DEPTH i32 #x0D70)
(bind-val GL_AUTO_NORMAL i32 #x0D80)
(bind-val GL_MAP1_COLOR_4 i32 #x0D90)
(bind-val GL_MAP1_INDEX i32 #x0D91)
(bind-val GL_MAP1_NORMAL i32 #x0D92)
(bind-val GL_MAP1_TEXTURE_COORD_1 i32 #x0D93)
(bind-val GL_MAP1_TEXTURE_COORD_2 i32 #x0D94)
(bind-val GL_MAP1_TEXTURE_COORD_3 i32 #x0D95)
(bind-val GL_MAP1_TEXTURE_COORD_4 i32 #x0D96)
(bind-val GL_MAP1_VERTEX_3 i32 #x0D97)
(bind-val GL_MAP1_VERTEX_4 i32 #x0D98)
(bind-val GL_MAP2_COLOR_4 i32 #x0DB0)
(bind-val GL_MAP2_INDEX i32 #x0DB1)
(bind-val GL_MAP2_NORMAL i32 #x0DB2)
(bind-val GL_MAP2_TEXTURE_COORD_1 i32 #x0DB3)
(bind-val GL_MAP2_TEXTURE_COORD_2 i32 #x0DB4)
(bind-val GL_MAP2_TEXTURE_COORD_3 i32 #x0DB5)
(bind-val GL_MAP2_TEXTURE_COORD_4 i32 #x0DB6)
(bind-val GL_MAP2_VERTEX_3 i32 #x0DB7)
(bind-val GL_MAP2_VERTEX_4 i32 #x0DB8)
(bind-val GL_MAP1_GRID_DOMAIN i32 #x0DD0)
(bind-val GL_MAP1_GRID_SEGMENTS i32 #x0DD1)
(bind-val GL_MAP2_GRID_DOMAIN i32 #x0DD2)
(bind-val GL_MAP2_GRID_SEGMENTS i32 #x0DD3)
(bind-val GL_TEXTURE_1D i32 #x0DE0)
(bind-val GL_TEXTURE_2D i32 #x0DE1)
(bind-val GL_FEEDBACK_BUFFER_POINTER i32 #x0DF0)
(bind-val GL_FEEDBACK_BUFFER_SIZE i32 #x0DF1)
(bind-val GL_FEEDBACK_BUFFER_TYPE i32 #x0DF2)
(bind-val GL_SELECTION_BUFFER_POINTER i32 #x0DF3)
(bind-val GL_SELECTION_BUFFER_SIZE i32 #x0DF4)
;; /*      GL_TEXTURE_BINDING_1D */
;; /*      GL_TEXTURE_BINDING_2D */
;; /*      GL_VERTEX_ARRAY */
;; /*      GL_NORMAL_ARRAY */
;; /*      GL_COLOR_ARRAY */
;; /*      GL_INDEX_ARRAY */
;; /*      GL_TEXTURE_COORD_ARRAY */
;; /*      GL_EDGE_FLAG_ARRAY */
;; /*      GL_VERTEX_ARRAY_SIZE */
;; /*      GL_VERTEX_ARRAY_TYPE */
;; /*      GL_VERTEX_ARRAY_STRIDE */
;; /*      GL_NORMAL_ARRAY_TYPE */
;; /*      GL_NORMAL_ARRAY_STRIDE */
;; /*      GL_COLOR_ARRAY_SIZE */
;; /*      GL_COLOR_ARRAY_TYPE */
;; /*      GL_COLOR_ARRAY_STRIDE */
;; /*      GL_INDEX_ARRAY_TYPE */
;; /*      GL_INDEX_ARRAY_STRIDE */
;; /*      GL_TEXTURE_COORD_ARRAY_SIZE */
;; /*      GL_TEXTURE_COORD_ARRAY_TYPE */
;; /*      GL_TEXTURE_COORD_ARRAY_STRIDE */
;; /*      GL_EDGE_FLAG_ARRAY_STRIDE */
;; /*      GL_POLYGON_OFFSET_FACTOR */
;; /*      GL_POLYGON_OFFSET_UNITS */

;; /* GetTextureParameter */
;; /*      GL_TEXTURE_MAG_FILTER */
;; /*      GL_TEXTURE_MIN_FILTER */
;; /*      GL_TEXTURE_WRAP_S */
;; /*      GL_TEXTURE_WRAP_T */
(bind-val GL_TEXTURE_WIDTH i32 #x1000)
(bind-val GL_TEXTURE_HEIGHT i32 #x1001)
(bind-val GL_TEXTURE_INTERNAL_FORMAT i32 #x1003)
(bind-val GL_TEXTURE_BORDER_COLOR i32 #x1004)
(bind-val GL_TEXTURE_BORDER i32 #x1005)
;; /*      GL_TEXTURE_RED_SIZE */
;; /*      GL_TEXTURE_GREEN_SIZE */
;; /*      GL_TEXTURE_BLUE_SIZE */
;; /*      GL_TEXTURE_ALPHA_SIZE */
;; /*      GL_TEXTURE_LUMINANCE_SIZE */
;; /*      GL_TEXTURE_INTENSITY_SIZE */
;; /*      GL_TEXTURE_PRIORITY */
;; /*      GL_TEXTURE_RESIDENT */

;; /* HintMode */
(bind-val GL_DONT_CARE i32 #x1100)
(bind-val GL_FASTEST i32 #x1101)
(bind-val GL_NICEST i32 #x1102)

;; /* HintTarget */
;; /*      GL_PERSPECTIVE_CORRECTION_HINT */
;; /*      GL_POINT_SMOOTH_HINT */
;; /*      GL_LINE_SMOOTH_HINT */
;; /*      GL_POLYGON_SMOOTH_HINT */
;; /*      GL_FOG_HINT */
;; /*      GL_PHONG_HINT */

;; /* IndexPointerType */
;; /*      GL_SHORT */
;; /*      GL_INT */
;; /*      GL_FLOAT */
;; /*      GL_DOUBLE */

;; /* LightModelParameter */
;; /*      GL_LIGHT_MODEL_AMBIENT */
;; /*      GL_LIGHT_MODEL_LOCAL_VIEWER */
;; /*      GL_LIGHT_MODEL_TWO_SIDE */

;; /* LightName */
(bind-val GL_LIGHT0 i32 #x4000)
(bind-val GL_LIGHT1 i32 #x4001)
(bind-val GL_LIGHT2 i32 #x4002)
(bind-val GL_LIGHT3 i32 #x4003)
(bind-val GL_LIGHT4 i32 #x4004)
(bind-val GL_LIGHT5 i32 #x4005)
(bind-val GL_LIGHT6 i32 #x4006)
(bind-val GL_LIGHT7 i32 #x4007)

;; /* LightParameter */
(bind-val GL_AMBIENT i32 #x1200)
(bind-val GL_DIFFUSE i32 #x1201)
(bind-val GL_SPECULAR i32 #x1202)
(bind-val GL_POSITION i32 #x1203)
(bind-val GL_SPOT_DIRECTION i32 #x1204)
(bind-val GL_SPOT_EXPONENT i32 #x1205)
(bind-val GL_SPOT_CUTOFF i32 #x1206)
(bind-val GL_CONSTANT_ATTENUATION i32 #x1207)
(bind-val GL_LINEAR_ATTENUATION i32 #x1208)
(bind-val GL_QUADRATIC_ATTENUATION i32 #x1209)

;; /* InterleavedArrays */
;; /*      GL_V2F */
;; /*      GL_V3F */
;; /*      GL_C4UB_V2F */
;; /*      GL_C4UB_V3F */
;; /*      GL_C3F_V3F */
;; /*      GL_N3F_V3F */
;; /*      GL_C4F_N3F_V3F */
;; /*      GL_T2F_V3F */
;; /*      GL_T4F_V4F */
;; /*      GL_T2F_C4UB_V3F */
;; /*      GL_T2F_C3F_V3F */
;; /*      GL_T2F_N3F_V3F */
;; /*      GL_T2F_C4F_N3F_V3F */
;; /*      GL_T4F_C4F_N3F_V4F */

;; /* ListMode */
(bind-val GL_COMPILE i32 #x1300)
(bind-val GL_COMPILE_AND_EXECUTE i32 #x1301)

;; /* ListNameType */
;; /*      GL_BYTE */
;; /*      GL_UNSIGNED_BYTE */
;; /*      GL_SHORT */
;; /*      GL_UNSIGNED_SHORT */
;; /*      GL_INT */
;; /*      GL_UNSIGNED_INT */
;; /*      GL_FLOAT */
;; /*      GL_2_BYTES */
;; /*      GL_3_BYTES */
;; /*      GL_4_BYTES */

;; /* LogicOp */
(bind-val GL_CLEAR i32 #x1500)
(bind-val GL_AND i32 #x1501)
(bind-val GL_AND_REVERSE i32 #x1502)
(bind-val GL_COPY i32 #x1503)
(bind-val GL_AND_INVERTED i32 #x1504)
(bind-val GL_NOOP i32 #x1505)
(bind-val GL_XOR i32 #x1506)
(bind-val GL_OR i32 #x1507)
(bind-val GL_NOR i32 #x1508)
(bind-val GL_EQUIV i32 #x1509)
(bind-val GL_INVERT i32 #x150A)
(bind-val GL_OR_REVERSE i32 #x150B)
(bind-val GL_COPY_INVERTED i32 #x150C)
(bind-val GL_OR_INVERTED i32 #x150D)
(bind-val GL_NAND i32 #x150E)
(bind-val GL_SET i32 #x150F)

;; /* MapTarget */
;; /*      GL_MAP1_COLOR_4 */
;; /*      GL_MAP1_INDEX */
;; /*      GL_MAP1_NORMAL */
;; /*      GL_MAP1_TEXTURE_COORD_1 */
;; /*      GL_MAP1_TEXTURE_COORD_2 */
;; /*      GL_MAP1_TEXTURE_COORD_3 */
;; /*      GL_MAP1_TEXTURE_COORD_4 */
;; /*      GL_MAP1_VERTEX_3 */
;; /*      GL_MAP1_VERTEX_4 */
;; /*      GL_MAP2_COLOR_4 */
;; /*      GL_MAP2_INDEX */
;; /*      GL_MAP2_NORMAL */
;; /*      GL_MAP2_TEXTURE_COORD_1 */
;; /*      GL_MAP2_TEXTURE_COORD_2 */
;; /*      GL_MAP2_TEXTURE_COORD_3 */
;; /*      GL_MAP2_TEXTURE_COORD_4 */
;; /*      GL_MAP2_VERTEX_3 */
;; /*      GL_MAP2_VERTEX_4 */

;; /* MaterialFace */
;; /*      GL_FRONT */
;; /*      GL_BACK */
;; /*      GL_FRONT_AND_BACK */

;; /* MaterialParameter */
(bind-val GL_EMISSION i32 #x1600)
(bind-val GL_SHININESS i32 #x1601)
(bind-val GL_AMBIENT_AND_DIFFUSE i32 #x1602)
(bind-val GL_COLOR_INDEXES i32 #x1603)
;; /*      GL_AMBIENT */
;; /*      GL_DIFFUSE */
;; /*      GL_SPECULAR */

;; /* MatrixMode */
(bind-val GL_MODELVIEW i32 #x1700)
(bind-val GL_PROJECTION i32 #x1701)
(bind-val GL_TEXTURE i32 #x1702)

;; /* MeshMode1 */
;; /*      GL_POINT */
;; /*      GL_LINE */

;; /* MeshMode2 */
;; /*      GL_POINT */
;; /*      GL_LINE */
;; /*      GL_FILL */

;; /* NormalPointerType */
;; /*      GL_BYTE */
;; /*      GL_SHORT */
;; /*      GL_INT */
;; /*      GL_FLOAT */
;; /*      GL_DOUBLE */

;; /* PixelCopyType */
(bind-val GL_COLOR i32 #x1800)
(bind-val GL_DEPTH i32 #x1801)
(bind-val GL_STENCIL i32 #x1802)

;; /* PixelFormat */
(bind-val GL_COLOR_INDEX i32 #x1900)
(bind-val GL_STENCIL_INDEX i32 #x1901)
(bind-val GL_DEPTH_COMPONENT i32 #x1902)
(bind-val GL_RED i32 #x1903)
(bind-val GL_GREEN i32 #x1904)
(bind-val GL_BLUE i32 #x1905)
(bind-val GL_ALPHA i32 #x1906)
(bind-val GL_RGB i32 #x1907)
(bind-val GL_RGBA i32 #x1908)
(bind-val GL_LUMINANCE i32 #x1909)
(bind-val GL_LUMINANCE_ALPHA i32 #x190A)

;; /* PixelMap */
;; /*      GL_PIXEL_MAP_I_TO_I */
;; /*      GL_PIXEL_MAP_S_TO_S */
;; /*      GL_PIXEL_MAP_I_TO_R */
;; /*      GL_PIXEL_MAP_I_TO_G */
;; /*      GL_PIXEL_MAP_I_TO_B */
;; /*      GL_PIXEL_MAP_I_TO_A */
;; /*      GL_PIXEL_MAP_R_TO_R */
;; /*      GL_PIXEL_MAP_G_TO_G */
;; /*      GL_PIXEL_MAP_B_TO_B */
;; /*      GL_PIXEL_MAP_A_TO_A */

;; /* PixelStore */
;; /*      GL_UNPACK_SWAP_BYTES */
;; /*      GL_UNPACK_LSB_FIRST */
;; /*      GL_UNPACK_ROW_LENGTH */
;; /*      GL_UNPACK_SKIP_ROWS */
;; /*      GL_UNPACK_SKIP_PIXELS */
;; /*      GL_UNPACK_ALIGNMENT */
;; /*      GL_PACK_SWAP_BYTES */
;; /*      GL_PACK_LSB_FIRST */
;; /*      GL_PACK_ROW_LENGTH */
;; /*      GL_PACK_SKIP_ROWS */
;; /*      GL_PACK_SKIP_PIXELS */
;; /*      GL_PACK_ALIGNMENT */

;; /* PixelTransfer */
;; /*      GL_MAP_COLOR */
;; /*      GL_MAP_STENCIL */
;; /*      GL_INDEX_SHIFT */
;; /*      GL_INDEX_OFFSET */
;; /*      GL_RED_SCALE */
;; /*      GL_RED_BIAS */
;; /*      GL_GREEN_SCALE */
;; /*      GL_GREEN_BIAS */
;; /*      GL_BLUE_SCALE */
;; /*      GL_BLUE_BIAS */
;; /*      GL_ALPHA_SCALE */
;; /*      GL_ALPHA_BIAS */
;; /*      GL_DEPTH_SCALE */
;; /*      GL_DEPTH_BIAS */

;; /* PixelType */
(bind-val GL_BITMAP i32 #x1A00)
;; /*      GL_BYTE */
;; /*      GL_UNSIGNED_BYTE */
;; /*      GL_SHORT */
;; /*      GL_UNSIGNED_SHORT */
;; /*      GL_INT */
;; /*      GL_UNSIGNED_INT */
;; /*      GL_FLOAT */

;; /* PolygonMode */
(bind-val GL_POINT i32 #x1B00)
(bind-val GL_LINE i32 #x1B01)
(bind-val GL_FILL i32 #x1B02)

;; /* ReadBufferMode */
;; /*      GL_FRONT_LEFT */
;; /*      GL_FRONT_RIGHT */
;; /*      GL_BACK_LEFT */
;; /*      GL_BACK_RIGHT */
;; /*      GL_FRONT */
;; /*      GL_BACK */
;; /*      GL_LEFT */
;; /*      GL_RIGHT */
;; /*      GL_AUX0 */
;; /*      GL_AUX1 */
;; /*      GL_AUX2 */
;; /*      GL_AUX3 */

;; /* RenderingMode */
(bind-val GL_RENDER i32 #x1C00)
(bind-val GL_FEEDBACK i32 #x1C01)
(bind-val GL_SELECT i32 #x1C02)

;; /* ShadingModel */
(bind-val GL_FLAT i32 #x1D00)
(bind-val GL_SMOOTH i32 #x1D01)


;; /* StencilFunction */
;; /*      GL_NEVER */
;; /*      GL_LESS */
;; /*      GL_EQUAL */
;; /*      GL_LEQUAL */
;; /*      GL_GREATER */
;; /*      GL_NOTEQUAL */
;; /*      GL_GEQUAL */
;; /*      GL_ALWAYS */

;; /* StencilOp */
;; /*      GL_ZERO */
(bind-val GL_KEEP i32 #x1E00)
(bind-val GL_REPLACE i32 #x1E01)
(bind-val GL_INCR i32 #x1E02)
(bind-val GL_DECR i32 #x1E03)
;; /*      GL_INVERT */

;; /* StringName */
(bind-val GL_VENDOR i32 #x1F00)
(bind-val GL_RENDERER i32 #x1F01)
(bind-val GL_VERSION i32 #x1F02)
(bind-val GL_EXTENSIONS i32 #x1F03)

;; /* TextureCoordName */
(bind-val GL_S i32 #x2000)
(bind-val GL_T i32 #x2001)
(bind-val GL_R i32 #x2002)
(bind-val GL_Q i32 #x2003)

;; /* TexCoordPointerType */
;; /*      GL_SHORT */
;; /*      GL_INT */
;; /*      GL_FLOAT */
;; /*      GL_DOUBLE */

;; /* TextureEnvMode */
(bind-val GL_MODULATE i32 #x2100)
(bind-val GL_DECAL i32 #x2101)
;; /*      GL_BLEND */
;; /*      GL_REPLACE */

;; /* TextureEnvParameter */
(bind-val GL_TEXTURE_ENV_MODE i32 #x2200)
(bind-val GL_TEXTURE_ENV_COLOR i32 #x2201)

;; /* TextureEnvTarget */
(bind-val GL_TEXTURE_ENV i32 #x2300)

;; /* TextureGenMode */
(bind-val GL_EYE_LINEAR i32 #x2400)
(bind-val GL_OBJECT_LINEAR i32 #x2401)
(bind-val GL_SPHERE_MAP i32 #x2402)

;; /* TextureGenParameter */
(bind-val GL_TEXTURE_GEN_MODE i32 #x2500)
(bind-val GL_OBJECT_PLANE i32 #x2501)
(bind-val GL_EYE_PLANE i32 #x2502)

;; /* TextureMagFilter */
(bind-val GL_NEAREST i32 #x2600)
(bind-val GL_LINEAR i32 #x2601)

;; /* TextureMinFilter */
;; /*      GL_NEAREST */
;; /*      GL_LINEAR */
(bind-val GL_NEAREST_MIPMAP_NEAREST i32 #x2700)
(bind-val GL_LINEAR_MIPMAP_NEAREST i32 #x2701)
(bind-val GL_NEAREST_MIPMAP_LINEAR i32 #x2702)
(bind-val GL_LINEAR_MIPMAP_LINEAR i32 #x2703)

;; /* TextureParameterName */
(bind-val GL_TEXTURE_MAG_FILTER i32 #x2800)
(bind-val GL_TEXTURE_MIN_FILTER i32 #x2801)
(bind-val GL_TEXTURE_WRAP_S i32 #x2802)
(bind-val GL_TEXTURE_WRAP_T i32 #x2803)
;; /*      GL_TEXTURE_BORDER_COLOR */
;; /*      GL_TEXTURE_PRIORITY */

;; /* TextureTarget */
;; /*      GL_TEXTURE_1D */
;; /*      GL_TEXTURE_2D */
;; /*      GL_PROXY_TEXTURE_1D */
;; /*      GL_PROXY_TEXTURE_2D */

;; /* TextureWrapMode */
(bind-val GL_CLAMP i32 #x2900)
(bind-val GL_REPEAT i32 #x2901)

;; /* VertexPointerType */
;; /*      GL_SHORT */
;; /*      GL_INT */
;; /*      GL_FLOAT */
;; /*      GL_DOUBLE */

;; /* ClientAttribMask */
(bind-val GL_CLIENT_PIXEL_STORE_BIT i32 #x00000001)
(bind-val GL_CLIENT_VERTEX_ARRAY_BIT i32 #x00000002)
(bind-val GL_CLIENT_ALL_ATTRIB_BITS i32 #xffffffff)

;; /* polygon_offset */
(bind-val GL_POLYGON_OFFSET_FACTOR i32 #x8038)
(bind-val GL_POLYGON_OFFSET_UNITS i32 #x2A00)
(bind-val GL_POLYGON_OFFSET_POINT i32 #x2A01)
(bind-val GL_POLYGON_OFFSET_LINE i32 #x2A02)
(bind-val GL_POLYGON_OFFSET_FILL i32 #x8037)

;; /* texture */
(bind-val GL_ALPHA4 i32 #x803B)
(bind-val GL_ALPHA8 i32 #x803C)
(bind-val GL_ALPHA12 i32 #x803D)
(bind-val GL_ALPHA16 i32 #x803E)
(bind-val GL_LUMINANCE4 i32 #x803F)
(bind-val GL_LUMINANCE8 i32 #x8040)
(bind-val GL_LUMINANCE12 i32 #x8041)
(bind-val GL_LUMINANCE16 i32 #x8042)
(bind-val GL_LUMINANCE4_ALPHA4 i32 #x8043)
(bind-val GL_LUMINANCE6_ALPHA2 i32 #x8044)
(bind-val GL_LUMINANCE8_ALPHA8 i32 #x8045)
(bind-val GL_LUMINANCE12_ALPHA4 i32 #x8046)
(bind-val GL_LUMINANCE12_ALPHA12 i32 #x8047)
(bind-val GL_LUMINANCE16_ALPHA16 i32 #x8048)
(bind-val GL_INTENSITY i32 #x8049)
(bind-val GL_INTENSITY4 i32 #x804A)
(bind-val GL_INTENSITY8 i32 #x804B)
(bind-val GL_INTENSITY12 i32 #x804C)
(bind-val GL_INTENSITY16 i32 #x804D)
(bind-val GL_R3_G3_B2 i32 #x2A10)
(bind-val GL_RGB4 i32 #x804F)
(bind-val GL_RGB5 i32 #x8050)
(bind-val GL_RGB8 i32 #x8051)
(bind-val GL_RGB10 i32 #x8052)
(bind-val GL_RGB12 i32 #x8053)
(bind-val GL_RGB16 i32 #x8054)
(bind-val GL_RGBA2 i32 #x8055)
(bind-val GL_RGBA4 i32 #x8056)
(bind-val GL_RGB5_A1 i32 #x8057)
(bind-val GL_RGBA8 i32 #x8058)
(bind-val GL_RGB10_A2 i32 #x8059)
(bind-val GL_RGBA12 i32 #x805A)
(bind-val GL_RGBA16 i32 #x805B)
(bind-val GL_TEXTURE_RED_SIZE i32 #x805C)
(bind-val GL_TEXTURE_GREEN_SIZE i32 #x805D)
(bind-val GL_TEXTURE_BLUE_SIZE i32 #x805E)
(bind-val GL_TEXTURE_ALPHA_SIZE i32 #x805F)
(bind-val GL_TEXTURE_LUMINANCE_SIZE i32 #x8060)
(bind-val GL_TEXTURE_INTENSITY_SIZE i32 #x8061)
(bind-val GL_PROXY_TEXTURE_1D i32 #x8063)
(bind-val GL_PROXY_TEXTURE_2D i32 #x8064)

;; /* texture_object */
(bind-val GL_TEXTURE_PRIORITY i32 #x8066)
(bind-val GL_TEXTURE_RESIDENT i32 #x8067)
(bind-val GL_TEXTURE_BINDING_1D i32 #x8068)
(bind-val GL_TEXTURE_BINDING_2D i32 #x8069)

;; /* vertex_array */
(bind-val GL_VERTEX_ARRAY i32 #x8074)
(bind-val GL_NORMAL_ARRAY i32 #x8075)
(bind-val GL_COLOR_ARRAY i32 #x8076)
(bind-val GL_INDEX_ARRAY i32 #x8077)
(bind-val GL_TEXTURE_COORD_ARRAY i32 #x8078)
(bind-val GL_EDGE_FLAG_ARRAY i32 #x8079)
(bind-val GL_VERTEX_ARRAY_SIZE i32 #x807A)
(bind-val GL_VERTEX_ARRAY_TYPE i32 #x807B)
(bind-val GL_VERTEX_ARRAY_STRIDE i32 #x807C)
(bind-val GL_NORMAL_ARRAY_TYPE i32 #x807E)
(bind-val GL_NORMAL_ARRAY_STRIDE i32 #x807F)
(bind-val GL_COLOR_ARRAY_SIZE i32 #x8081)
(bind-val GL_COLOR_ARRAY_TYPE i32 #x8082)
(bind-val GL_COLOR_ARRAY_STRIDE i32 #x8083)
(bind-val GL_INDEX_ARRAY_TYPE i32 #x8085)
(bind-val GL_INDEX_ARRAY_STRIDE i32 #x8086)
(bind-val GL_TEXTURE_COORD_ARRAY_SIZE i32 #x8088)
(bind-val GL_TEXTURE_COORD_ARRAY_TYPE i32 #x8089)
(bind-val GL_TEXTURE_COORD_ARRAY_STRIDE i32 #x808A)
(bind-val GL_EDGE_FLAG_ARRAY_STRIDE i32 #x808C)
(bind-val GL_VERTEX_ARRAY_POINTER i32 #x808E)
(bind-val GL_NORMAL_ARRAY_POINTER i32 #x808F)
(bind-val GL_COLOR_ARRAY_POINTER i32 #x8090)
(bind-val GL_INDEX_ARRAY_POINTER i32 #x8091)
(bind-val GL_TEXTURE_COORD_ARRAY_POINTER i32 #x8092)
(bind-val GL_EDGE_FLAG_ARRAY_POINTER i32 #x8093)
(bind-val GL_V2F i32 #x2A20)
(bind-val GL_V3F i32 #x2A21)
(bind-val GL_C4UB_V2F i32 #x2A22)
(bind-val GL_C4UB_V3F i32 #x2A23)
(bind-val GL_C3F_V3F i32 #x2A24)
(bind-val GL_N3F_V3F i32 #x2A25)
(bind-val GL_C4F_N3F_V3F i32 #x2A26)
(bind-val GL_T2F_V3F i32 #x2A27)
(bind-val GL_T4F_V4F i32 #x2A28)
(bind-val GL_T2F_C4UB_V3F i32 #x2A29)
(bind-val GL_T2F_C3F_V3F i32 #x2A2A)
(bind-val GL_T2F_N3F_V3F i32 #x2A2B)
(bind-val GL_T2F_C4F_N3F_V3F i32 #x2A2C)
(bind-val GL_T4F_C4F_N3F_V4F i32 #x2A2D)

;; /* Extensions */
(bind-val GL_EXT_vertex_array i32 1)
(bind-val GL_EXT_bgra i32 1)
(bind-val GL_EXT_paletted_texture i32 1)
(bind-val GL_WIN_swap_hint i32 1)
(bind-val GL_WIN_draw_range_elements i32 1)
;; #define GL_WIN_phong_shading              1
;; #define GL_WIN_specular_fog               1

;; /* EXT_vertex_array */
(bind-val GL_VERTEX_ARRAY_EXT i32 #x8074)
(bind-val GL_NORMAL_ARRAY_EXT i32 #x8075)
(bind-val GL_COLOR_ARRAY_EXT i32 #x8076)
(bind-val GL_INDEX_ARRAY_EXT i32 #x8077)
(bind-val GL_TEXTURE_COORD_ARRAY_EXT i32 #x8078)
(bind-val GL_EDGE_FLAG_ARRAY_EXT i32 #x8079)
(bind-val GL_VERTEX_ARRAY_SIZE_EXT i32 #x807A)
(bind-val GL_VERTEX_ARRAY_TYPE_EXT i32 #x807B)
(bind-val GL_VERTEX_ARRAY_STRIDE_EXT i32 #x807C)
(bind-val GL_VERTEX_ARRAY_COUNT_EXT i32 #x807D)
(bind-val GL_NORMAL_ARRAY_TYPE_EXT i32 #x807E)
(bind-val GL_NORMAL_ARRAY_STRIDE_EXT i32 #x807F)
(bind-val GL_NORMAL_ARRAY_COUNT_EXT i32 #x8080)
(bind-val GL_COLOR_ARRAY_SIZE_EXT i32 #x8081)
(bind-val GL_COLOR_ARRAY_TYPE_EXT i32 #x8082)
(bind-val GL_COLOR_ARRAY_STRIDE_EXT i32 #x8083)
(bind-val GL_COLOR_ARRAY_COUNT_EXT i32 #x8084)
(bind-val GL_INDEX_ARRAY_TYPE_EXT i32 #x8085)
(bind-val GL_INDEX_ARRAY_STRIDE_EXT i32 #x8086)
(bind-val GL_INDEX_ARRAY_COUNT_EXT i32 #x8087)
(bind-val GL_TEXTURE_COORD_ARRAY_SIZE_EXT i32 #x8088)
(bind-val GL_TEXTURE_COORD_ARRAY_TYPE_EXT i32 #x8089)
(bind-val GL_TEXTURE_COORD_ARRAY_STRIDE_EXT i32 #x808A)
(bind-val GL_TEXTURE_COORD_ARRAY_COUNT_EXT i32 #x808B)
(bind-val GL_EDGE_FLAG_ARRAY_STRIDE_EXT i32 #x808C)
(bind-val GL_EDGE_FLAG_ARRAY_COUNT_EXT i32 #x808D)
(bind-val GL_VERTEX_ARRAY_POINTER_EXT i32 #x808E)
(bind-val GL_NORMAL_ARRAY_POINTER_EXT i32 #x808F)
(bind-val GL_COLOR_ARRAY_POINTER_EXT i32 #x8090)
(bind-val GL_INDEX_ARRAY_POINTER_EXT i32 #x8091)
(bind-val GL_TEXTURE_COORD_ARRAY_POINTER_EXT i32 #x8092)
(bind-val GL_EDGE_FLAG_ARRAY_POINTER_EXT i32 #x8093)
(bind-val GL_DOUBLE_EXT i32 #x140A)

;; /* EXT_bgra */
(bind-val GL_BGR_EXT i32 #x80E0)
(bind-val GL_BGRA_EXT i32 #x80E1)

;; /* EXT_paletted_texture */

;; /* These must match the GL_COLOR_TABLE_*_SGI enumerants */
(bind-val GL_COLOR_TABLE_FORMAT_EXT i32 #x80D8)
(bind-val GL_COLOR_TABLE_WIDTH_EXT i32 #x80D9)
(bind-val GL_COLOR_TABLE_RED_SIZE_EXT i32 #x80DA)
(bind-val GL_COLOR_TABLE_GREEN_SIZE_EXT i32 #x80DB)
(bind-val GL_COLOR_TABLE_BLUE_SIZE_EXT i32 #x80DC)
(bind-val GL_COLOR_TABLE_ALPHA_SIZE_EXT i32 #x80DD)
(bind-val GL_COLOR_TABLE_LUMINANCE_SIZE_EXT i32 #x80DE)
(bind-val GL_COLOR_TABLE_INTENSITY_SIZE_EXT i32 #x80DF)

(bind-val GL_COLOR_INDEX1_EXT i32 #x80E2)
(bind-val GL_COLOR_INDEX2_EXT i32 #x80E3)
(bind-val GL_COLOR_INDEX4_EXT i32 #x80E4)
(bind-val GL_COLOR_INDEX8_EXT i32 #x80E5)
(bind-val GL_COLOR_INDEX12_EXT i32 #x80E6)
(bind-val GL_COLOR_INDEX16_EXT i32 #x80E7)

;; /* WIN_draw_range_elements */
(bind-val GL_MAX_ELEMENTS_VERTICES_WIN i32 #x80E8)
(bind-val GL_MAX_ELEMENTS_INDICES_WIN i32 #x80E9)

;; /* WIN_phong_shading */
(bind-val GL_PHONG_WIN i32 #x80EA)
(bind-val GL_PHONG_HINT_WIN i32 #x80EB)

;; /* WIN_specular_fog */
(bind-val GL_FOG_SPECULAR_TEXTURE_WIN i32 #x80EC)

;; /* For compatibility with OpenGL v1.0 */
(bind-val GL_LOGIC_OP i32 #x0BF1)
(bind-val GL_TEXTURE_COMPONENTS i32 #x1003)

(bind-lib libGL glAccum [void,GLenum,GLfloat]*)
(bind-lib libGL glAlphaFunc [void,GLenum,GLclampf]*)
(bind-lib libGL glAreTexturesResident [GLboolean,GLsizei,GLuint*,GLboolean*]*)
(bind-lib libGL glArrayElement [void,GLint]*)
(bind-lib libGL glBegin [void,GLenum]*)
(bind-lib libGL glBindTexture [void,GLenum,GLuint]*)
(bind-lib libGL glBitmap [void,GLsizei,GLsizei,GLfloat,GLfloat,GLfloat,GLfloat,GLubyte*]*)
(bind-lib libGL glBlendFunc [void,GLenum,GLenum]*)
(bind-lib libGL glCallList [void,GLuint]*)
(bind-lib libGL glCallLists [void,GLsizei,GLenum,GLvoid*]*)
(bind-lib libGL glClear [void,GLbitfield]*)
(bind-lib libGL glClearAccum [void,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glClearColor [void,GLclampf,GLclampf,GLclampf,GLclampf]*)
(bind-lib libGL glClearDepth [void,GLclampd]*)
(bind-lib libGL glClearIndex [void,GLfloat]*)
(bind-lib libGL glClearStencil [void,GLint]*)
(bind-lib libGL glClipPlane [void,GLenum,GLdouble*]*)
(bind-lib libGL glColor3b [void,GLbyte,GLbyte,GLbyte]*)
(bind-lib libGL glColor3bv [void,GLbyte*]*)
(bind-lib libGL glColor3d [void,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glColor3dv [void,GLdouble*]*)
(bind-lib libGL glColor3f [void,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glColor3fv [void,GLfloat*]*)
(bind-lib libGL glColor3i [void,GLint,GLint,GLint]*)
(bind-lib libGL glColor3iv [void,GLint*]*)
(bind-lib libGL glColor3s [void,GLshort,GLshort,GLshort]*)
(bind-lib libGL glColor3sv [void,GLshort*]*)
(bind-lib libGL glColor3ub [void,GLubyte,GLubyte,GLubyte]*)
(bind-lib libGL glColor3ubv [void,GLubyte*]*)
(bind-lib libGL glColor3ui [void,GLuint,GLuint,GLuint]*)
(bind-lib libGL glColor3uiv [void,GLuint*]*)
(bind-lib libGL glColor3us [void,GLushort,GLushort,GLushort]*)
(bind-lib libGL glColor3usv [void,GLushort*]*)
(bind-lib libGL glColor4b [void,GLbyte,GLbyte,GLbyte,GLbyte]*)
(bind-lib libGL glColor4bv [void,GLbyte*]*)
(bind-lib libGL glColor4d [void,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glColor4dv [void,GLdouble*]*)
(bind-lib libGL glColor4f [void,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glColor4fv [void,GLfloat*]*)
(bind-lib libGL glColor4i [void,GLint,GLint,GLint,GLint]*)
(bind-lib libGL glColor4iv [void,GLint*]*)
(bind-lib libGL glColor4s [void,GLshort,GLshort,GLshort,GLshort]*)
(bind-lib libGL glColor4sv [void,GLshort*]*)
(bind-lib libGL glColor4ub [void,GLubyte,GLubyte,GLubyte,GLubyte]*)
(bind-lib libGL glColor4ubv [void,GLubyte*]*)
(bind-lib libGL glColor4ui [void,GLuint,GLuint,GLuint,GLuint]*)
(bind-lib libGL glColor4uiv [void,GLuint*]*)
(bind-lib libGL glColor4us [void,GLushort,GLushort,GLushort,GLushort]*)
(bind-lib libGL glColor4usv [void,GLushort*]*)
(bind-lib libGL glColorMask [void,GLboolean,GLboolean,GLboolean,GLboolean]*)
(bind-lib libGL glColorMaterial [void,GLenum,GLenum]*)
(bind-lib libGL glColorPointer [void,GLint,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glCopyPixels [void,GLint,GLint,GLsizei,GLsizei,GLenum]*)
(bind-lib libGL glCopyTexImage1D [void,GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLint]*)
(bind-lib libGL glCopyTexImage2D [void,GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLsizei,GLint]*)
(bind-lib libGL glCopyTexSubImage1D [void,GLenum,GLint,GLint,GLint,GLint,GLsizei]*)
(bind-lib libGL glCopyTexSubImage2D [void,GLenum,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei]*)
(bind-lib libGL glCullFace [void,GLenum]*)
(bind-lib libGL glDeleteLists [void,GLuint,GLsizei]*)
(bind-lib libGL glDeleteTextures [void,GLsizei,GLuint*]*)
(bind-lib libGL glDepthFunc [void,GLenum]*)
(bind-lib libGL glDepthMask [void,GLboolean]*)
(bind-lib libGL glDepthRange [void,GLclampd,GLclampd]*)
(bind-lib libGL glDisable [void,GLenum]*)
(bind-lib libGL glDisableClientState [void,GLenum]*)
(bind-lib libGL glDrawArrays [void,GLenum,GLint,GLsizei]*)
(bind-lib libGL glDrawBuffer [void,GLenum]*)
(bind-lib libGL glDrawElements [void,GLenum,GLsizei,GLenum,GLvoid*]*)
(bind-lib libGL glDrawPixels [void,GLsizei,GLsizei,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glEdgeFlag [void,GLboolean]*)
(bind-lib libGL glEdgeFlagPointer [void,GLsizei,GLvoid*]*)
(bind-lib libGL glEdgeFlagv [void,GLboolean*]*)
(bind-lib libGL glEnable [void,GLenum]*)
(bind-lib libGL glEnableClientState [void,GLenum]*)
(bind-lib libGL glEnd [void]*)
(bind-lib libGL glEndList [void]*)
(bind-lib libGL glEvalCoord1d [void,GLdouble]*)
(bind-lib libGL glEvalCoord1dv [void,GLdouble*]*)
(bind-lib libGL glEvalCoord1f [void,GLfloat]*)
(bind-lib libGL glEvalCoord1fv [void,GLfloat*]*)
(bind-lib libGL glEvalCoord2d [void,GLdouble,GLdouble]*)
(bind-lib libGL glEvalCoord2dv [void,GLdouble*]*)
(bind-lib libGL glEvalCoord2f [void,GLfloat,GLfloat]*)
(bind-lib libGL glEvalCoord2fv [void,GLfloat*]*)
(bind-lib libGL glEvalMesh1 [void,GLenum,GLint,GLint]*)
(bind-lib libGL glEvalMesh2 [void,GLenum,GLint,GLint,GLint,GLint]*)
(bind-lib libGL glEvalPoint1 [void,GLint]*)
(bind-lib libGL glEvalPoint2 [void,GLint,GLint]*)
(bind-lib libGL glFeedbackBuffer [void,GLsizei,GLenum,GLfloat*]*)
(bind-lib libGL glFinish [void]*)
(bind-lib libGL glFlush [void]*)
(bind-lib libGL glFogf [void,GLenum,GLfloat]*)
(bind-lib libGL glFogfv [void,GLenum,GLfloat*]*)
(bind-lib libGL glFogi [void,GLenum,GLint]*)
(bind-lib libGL glFogiv [void,GLenum,GLint*]*)
(bind-lib libGL glFrontFace [void,GLenum]*)
(bind-lib libGL glFrustum [void,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glGenLists [GLuint,GLsizei]*)
(bind-lib libGL glGenTextures [void,GLsizei,GLuint*]*)
(bind-lib libGL glGetBooleanv [void,GLenum,GLboolean*]*)
(bind-lib libGL glGetClipPlane [void,GLenum,GLdouble*]*)
(bind-lib libGL glGetDoublev [void,GLenum,GLdouble*]*)
(bind-lib libGL glGetError [GLenum]*)
(bind-lib libGL glGetFloatv [void,GLenum,GLfloat*]*)
(bind-lib libGL glGetIntegerv [void,GLenum,GLint*]*)
(bind-lib libGL glGetLightfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetLightiv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetMapdv [void,GLenum,GLenum,GLdouble*]*)
(bind-lib libGL glGetMapfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetMapiv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetMaterialfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetMaterialiv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetPixelMapfv [void,GLenum,GLfloat*]*)
(bind-lib libGL glGetPixelMapuiv [void,GLenum,GLuint*]*)
(bind-lib libGL glGetPixelMapusv [void,GLenum,GLushort*]*)
(bind-lib libGL glGetPointerv [void,GLenum,GLvoid**]*)
(bind-lib libGL glGetPolygonStipple [void,GLubyte*]*)
(bind-lib libGL glGetTexEnvfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetTexEnviv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetTexGendv [void,GLenum,GLenum,GLdouble*]*)
(bind-lib libGL glGetTexGenfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetTexGeniv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetTexImage [void,GLenum,GLint,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glGetTexLevelParameterfv [void,GLenum,GLint,GLenum,GLfloat*]*)
(bind-lib libGL glGetTexLevelParameteriv [void,GLenum,GLint,GLenum,GLint*]*)
(bind-lib libGL glGetTexParameterfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetTexParameteriv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glHint [void,GLenum,GLenum]*)
(bind-lib libGL glIndexMask [void,GLuint]*)
(bind-lib libGL glIndexPointer [void,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glIndexd [void,GLdouble]*)
(bind-lib libGL glIndexdv [void,GLdouble*]*)
(bind-lib libGL glIndexf [void,GLfloat]*)
(bind-lib libGL glIndexfv [void,GLfloat*]*)
(bind-lib libGL glIndexi [void,GLint]*)
(bind-lib libGL glIndexiv [void,GLint*]*)
(bind-lib libGL glIndexs [void,GLshort]*)
(bind-lib libGL glIndexsv [void,GLshort*]*)
(bind-lib libGL glIndexub [void,GLubyte]*)
(bind-lib libGL glIndexubv [void,GLubyte*]*)
(bind-lib libGL glInitNames [void]*)
(bind-lib libGL glInterleavedArrays [void,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glIsEnabled [GLboolean,GLenum]*)
(bind-lib libGL glIsList [GLboolean,GLuint]*)
(bind-lib libGL glIsTexture [GLboolean,GLuint]*)
(bind-lib libGL glLightModelf [void,GLenum,GLfloat]*)
(bind-lib libGL glLightModelfv [void,GLenum,GLfloat*]*)
(bind-lib libGL glLightModeli [void,GLenum,GLint]*)
(bind-lib libGL glLightModeliv [void,GLenum,GLint*]*)
(bind-lib libGL glLightf [void,GLenum,GLenum,GLfloat]*)
(bind-lib libGL glLightfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glLighti [void,GLenum,GLenum,GLint]*)
(bind-lib libGL glLightiv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glLineStipple [void,GLint,GLushort]*)
(bind-lib libGL glLineWidth [void,GLfloat]*)
(bind-lib libGL glListBase [void,GLuint]*)
(bind-lib libGL glLoadIdentity [void]*)
(bind-lib libGL glLoadMatrixd [void,GLdouble*]*)
(bind-lib libGL glLoadMatrixf [void,GLfloat*]*)
(bind-lib libGL glLoadName [void,GLuint]*)
(bind-lib libGL glLogicOp [void,GLenum]*)
(bind-lib libGL glMap1d [void,GLenum,GLdouble,GLdouble,GLint,GLint,GLdouble*]*)
(bind-lib libGL glMap1f [void,GLenum,GLfloat,GLfloat,GLint,GLint,GLfloat*]*)
(bind-lib libGL glMap2d [void,GLenum,GLdouble,GLdouble,GLint,GLint,GLdouble,GLdouble,GLint,GLint,GLdouble*]*)
(bind-lib libGL glMap2f [void,GLenum,GLfloat,GLfloat,GLint,GLint,GLfloat,GLfloat,GLint,GLint,GLfloat*]*)
(bind-lib libGL glMapGrid1d [void,GLint,GLdouble,GLdouble]*)
(bind-lib libGL glMapGrid1f [void,GLint,GLfloat,GLfloat]*)
(bind-lib libGL glMapGrid2d [void,GLint,GLdouble,GLdouble,GLint,GLdouble,GLdouble]*)
(bind-lib libGL glMapGrid2f [void,GLint,GLfloat,GLfloat,GLint,GLfloat,GLfloat]*)
(bind-lib libGL glMaterialf [void,GLenum,GLenum,GLfloat]*)
(bind-lib libGL glMaterialfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glMateriali [void,GLenum,GLenum,GLint]*)
(bind-lib libGL glMaterialiv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glMatrixMode [void,GLenum]*)
(bind-lib libGL glMultMatrixd [void,GLdouble*]*)
(bind-lib libGL glMultMatrixf [void,GLfloat*]*)
(bind-lib libGL glNewList [void,GLuint,GLenum]*)
(bind-lib libGL glNormal3b [void,GLbyte,GLbyte,GLbyte]*)
(bind-lib libGL glNormal3bv [void,GLbyte*]*)
(bind-lib libGL glNormal3d [void,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glNormal3dv [void,GLdouble*]*)
(bind-lib libGL glNormal3f [void,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glNormal3fv [void,GLfloat*]*)
(bind-lib libGL glNormal3i [void,GLint,GLint,GLint]*)
(bind-lib libGL glNormal3iv [void,GLint*]*)
(bind-lib libGL glNormal3s [void,GLshort,GLshort,GLshort]*)
(bind-lib libGL glNormal3sv [void,GLshort*]*)
(bind-lib libGL glNormalPointer [void,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glOrtho [void,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glPassThrough [void,GLfloat]*)
(bind-lib libGL glPixelMapfv [void,GLenum,GLsizei,GLfloat*]*)
(bind-lib libGL glPixelMapuiv [void,GLenum,GLsizei,GLuint*]*)
(bind-lib libGL glPixelMapusv [void,GLenum,GLsizei,GLushort*]*)
(bind-lib libGL glPixelStoref [void,GLenum,GLfloat]*)
(bind-lib libGL glPixelStorei [void,GLenum,GLint]*)
(bind-lib libGL glPixelTransferf [void,GLenum,GLfloat]*)
(bind-lib libGL glPixelTransferi [void,GLenum,GLint]*)
(bind-lib libGL glPixelZoom [void,GLfloat,GLfloat]*)
(bind-lib libGL glPointSize [void,GLfloat]*)
(bind-lib libGL glPolygonMode [void,GLenum,GLenum]*)
(bind-lib libGL glPolygonOffset [void,GLfloat,GLfloat]*)
(bind-lib libGL glPolygonStipple [void,GLubyte*]*)
(bind-lib libGL glPopAttrib [void]*)
(bind-lib libGL glPopClientAttrib [void]*)
(bind-lib libGL glPopMatrix [void]*)
(bind-lib libGL glPopName [void]*)
(bind-lib libGL glPrioritizeTextures [void,GLsizei,GLuint*,GLclampf*]*)
(bind-lib libGL glPushAttrib [void,GLbitfield]*)
(bind-lib libGL glPushClientAttrib [void,GLbitfield]*)
(bind-lib libGL glPushMatrix [void]*)
(bind-lib libGL glPushName [void,GLuint]*)
(bind-lib libGL glRasterPos2d [void,GLdouble,GLdouble]*)
(bind-lib libGL glRasterPos2dv [void,GLdouble*]*)
(bind-lib libGL glRasterPos2f [void,GLfloat,GLfloat]*)
(bind-lib libGL glRasterPos2fv [void,GLfloat*]*)
(bind-lib libGL glRasterPos2i [void,GLint,GLint]*)
(bind-lib libGL glRasterPos2iv [void,GLint*]*)
(bind-lib libGL glRasterPos2s [void,GLshort,GLshort]*)
(bind-lib libGL glRasterPos2sv [void,GLshort*]*)
(bind-lib libGL glRasterPos3d [void,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glRasterPos3dv [void,GLdouble*]*)
(bind-lib libGL glRasterPos3f [void,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glRasterPos3fv [void,GLfloat*]*)
(bind-lib libGL glRasterPos3i [void,GLint,GLint,GLint]*)
(bind-lib libGL glRasterPos3iv [void,GLint*]*)
(bind-lib libGL glRasterPos3s [void,GLshort,GLshort,GLshort]*)
(bind-lib libGL glRasterPos3sv [void,GLshort*]*)
(bind-lib libGL glRasterPos4d [void,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glRasterPos4dv [void,GLdouble*]*)
(bind-lib libGL glRasterPos4f [void,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glRasterPos4fv [void,GLfloat*]*)
(bind-lib libGL glRasterPos4i [void,GLint,GLint,GLint,GLint]*)
(bind-lib libGL glRasterPos4iv [void,GLint*]*)
(bind-lib libGL glRasterPos4s [void,GLshort,GLshort,GLshort,GLshort]*)
(bind-lib libGL glRasterPos4sv [void,GLshort*]*)
(bind-lib libGL glReadBuffer [void,GLenum]*)
(bind-lib libGL glReadPixels [void,GLint,GLint,GLsizei,GLsizei,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glRectd [void,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glRectdv [void,GLdouble*,GLdouble*]*)
(bind-lib libGL glRectf [void,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glRectfv [void,GLfloat*,GLfloat*]*)
(bind-lib libGL glRecti [void,GLint,GLint,GLint,GLint]*)
(bind-lib libGL glRectiv [void,GLint*,GLint*]*)
(bind-lib libGL glRects [void,GLshort,GLshort,GLshort,GLshort]*)
(bind-lib libGL glRectsv [void,GLshort*,GLshort*]*)
(bind-lib libGL glRenderMode [GLint,GLenum]*)
(bind-lib libGL glRotated [void,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glRotatef [void,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glScaled [void,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glScalef [void,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glScissor [void,GLint,GLint,GLsizei,GLsizei]*)
(bind-lib libGL glSelectBuffer [void,GLsizei,GLuint*]*)
(bind-lib libGL glShadeModel [void,GLenum]*)
(bind-lib libGL glStencilFunc [void,GLenum,GLint,GLuint]*)
(bind-lib libGL glStencilMask [void,GLuint]*)
(bind-lib libGL glStencilOp [void,GLenum,GLenum,GLenum]*)
(bind-lib libGL glTexCoord1d [void,GLdouble]*)
(bind-lib libGL glTexCoord1dv [void,GLdouble*]*)
(bind-lib libGL glTexCoord1f [void,GLfloat]*)
(bind-lib libGL glTexCoord1fv [void,GLfloat*]*)
(bind-lib libGL glTexCoord1i [void,GLint]*)
(bind-lib libGL glTexCoord1iv [void,GLint*]*)
(bind-lib libGL glTexCoord1s [void,GLshort]*)
(bind-lib libGL glTexCoord1sv [void,GLshort*]*)
(bind-lib libGL glTexCoord2d [void,GLdouble,GLdouble]*)
(bind-lib libGL glTexCoord2dv [void,GLdouble*]*)
(bind-lib libGL glTexCoord2f [void,GLfloat,GLfloat]*)
(bind-lib libGL glTexCoord2fv [void,GLfloat*]*)
(bind-lib libGL glTexCoord2i [void,GLint,GLint]*)
(bind-lib libGL glTexCoord2iv [void,GLint*]*)
(bind-lib libGL glTexCoord2s [void,GLshort,GLshort]*)
(bind-lib libGL glTexCoord2sv [void,GLshort*]*)
(bind-lib libGL glTexCoord3d [void,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glTexCoord3dv [void,GLdouble*]*)
(bind-lib libGL glTexCoord3f [void,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glTexCoord3fv [void,GLfloat*]*)
(bind-lib libGL glTexCoord3i [void,GLint,GLint,GLint]*)
(bind-lib libGL glTexCoord3iv [void,GLint*]*)
(bind-lib libGL glTexCoord3s [void,GLshort,GLshort,GLshort]*)
(bind-lib libGL glTexCoord3sv [void,GLshort*]*)
(bind-lib libGL glTexCoord4d [void,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glTexCoord4dv [void,GLdouble*]*)
(bind-lib libGL glTexCoord4f [void,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glTexCoord4fv [void,GLfloat*]*)
(bind-lib libGL glTexCoord4i [void,GLint,GLint,GLint,GLint]*)
(bind-lib libGL glTexCoord4iv [void,GLint*]*)
(bind-lib libGL glTexCoord4s [void,GLshort,GLshort,GLshort,GLshort]*)
(bind-lib libGL glTexCoord4sv [void,GLshort*]*)
(bind-lib libGL glTexCoordPointer [void,GLint,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glTexEnvf [void,GLenum,GLenum,GLfloat]*)
(bind-lib libGL glTexEnvfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glTexEnvi [void,GLenum,GLenum,GLint]*)
(bind-lib libGL glTexEnviv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glTexGend [void,GLenum,GLenum,GLdouble]*)
(bind-lib libGL glTexGendv [void,GLenum,GLenum,GLdouble*]*)
(bind-lib libGL glTexGenf [void,GLenum,GLenum,GLfloat]*)
(bind-lib libGL glTexGenfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glTexGeni [void,GLenum,GLenum,GLint]*)
(bind-lib libGL glTexGeniv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glTexImage1D [void,GLenum,GLint,GLint,GLsizei,GLint,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glTexImage2D [void,GLenum,GLint,GLint,GLsizei,GLsizei,GLint,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glTexParameterf [void,GLenum,GLenum,GLfloat]*)
(bind-lib libGL glTexParameterfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glTexParameteri [void,GLenum,GLenum,GLint]*)
(bind-lib libGL glTexParameteriv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glTexSubImage1D [void,GLenum,GLint,GLint,GLsizei,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glTexSubImage2D [void,GLenum,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glTranslated [void,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glTranslatef [void,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glVertex2d [void,GLdouble,GLdouble]*)
(bind-lib libGL glVertex2dv [void,GLdouble*]*)
(bind-lib libGL glVertex2f [void,GLfloat,GLfloat]*)
(bind-lib libGL glVertex2fv [void,GLfloat*]*)
(bind-lib libGL glVertex2i [void,GLint,GLint]*)
(bind-lib libGL glVertex2iv [void,GLint*]*)
(bind-lib libGL glVertex2s [void,GLshort,GLshort]*)
(bind-lib libGL glVertex2sv [void,GLshort*]*)
(bind-lib libGL glVertex3d [void,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glVertex3dv [void,GLdouble*]*)
(bind-lib libGL glVertex3f [void,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glVertex3fv [void,GLfloat*]*)
(bind-lib libGL glVertex3i [void,GLint,GLint,GLint]*)
(bind-lib libGL glVertex3iv [void,GLint*]*)
(bind-lib libGL glVertex3s [void,GLshort,GLshort,GLshort]*)
(bind-lib libGL glVertex3sv [void,GLshort*]*)
(bind-lib libGL glVertex4d [void,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glVertex4dv [void,GLdouble*]*)
(bind-lib libGL glVertex4f [void,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glVertex4fv [void,GLfloat*]*)
(bind-lib libGL glVertex4i [void,GLint,GLint,GLint,GLint]*)
(bind-lib libGL glVertex4iv [void,GLint*]*)
(bind-lib libGL glVertex4s [void,GLshort,GLshort,GLshort,GLshort]*)
(bind-lib libGL glVertex4sv [void,GLshort*]*)
(bind-lib libGL glVertexPointer [void,GLint,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glViewport [void,GLint,GLint,GLsizei,GLsizei]*)

;; from here, should be the same as glcore-getprocaddress.xtm

;; #ifndef GL_VERSION_1_2
(bind-val GL_VERSION_1_2 i32 1)
(bind-val GL_UNSIGNED_BYTE_3_3_2 i32 #x8032)
(bind-val GL_UNSIGNED_SHORT_4_4_4_4 i32 #x8033)
(bind-val GL_UNSIGNED_SHORT_5_5_5_1 i32 #x8034)
(bind-val GL_UNSIGNED_INT_8_8_8_8 i32 #x8035)
(bind-val GL_UNSIGNED_INT_10_10_10_2 i32 #x8036)
(bind-val GL_TEXTURE_BINDING_3D i32 #x806A)
(bind-val GL_PACK_SKIP_IMAGES i32 #x806B)
(bind-val GL_PACK_IMAGE_HEIGHT i32 #x806C)
(bind-val GL_UNPACK_SKIP_IMAGES i32 #x806D)
(bind-val GL_UNPACK_IMAGE_HEIGHT i32 #x806E)
(bind-val GL_TEXTURE_3D i32 #x806F)
(bind-val GL_PROXY_TEXTURE_3D i32 #x8070)
(bind-val GL_TEXTURE_DEPTH i32 #x8071)
(bind-val GL_TEXTURE_WRAP_R i32 #x8072)
(bind-val GL_MAX_3D_TEXTURE_SIZE i32 #x8073)
(bind-val GL_UNSIGNED_BYTE_2_3_3_REV i32 #x8362)
(bind-val GL_UNSIGNED_SHORT_5_6_5 i32 #x8363)
(bind-val GL_UNSIGNED_SHORT_5_6_5_REV i32 #x8364)
(bind-val GL_UNSIGNED_SHORT_4_4_4_4_REV i32 #x8365)
(bind-val GL_UNSIGNED_SHORT_1_5_5_5_REV i32 #x8366)
(bind-val GL_UNSIGNED_INT_8_8_8_8_REV i32 #x8367)
(bind-val GL_UNSIGNED_INT_2_10_10_10_REV i32 #x8368)
(bind-val GL_BGR i32 #x80E0)
(bind-val GL_BGRA i32 #x80E1)
(bind-val GL_MAX_ELEMENTS_VERTICES i32 #x80E8)
(bind-val GL_MAX_ELEMENTS_INDICES i32 #x80E9)
(bind-val GL_CLAMP_TO_EDGE i32 #x812F)
(bind-val GL_TEXTURE_MIN_LOD i32 #x813A)
(bind-val GL_TEXTURE_MAX_LOD i32 #x813B)
(bind-val GL_TEXTURE_BASE_LEVEL i32 #x813C)
(bind-val GL_TEXTURE_MAX_LEVEL i32 #x813D)
(bind-val GL_SMOOTH_POINT_SIZE_RANGE i32 #x0B12)
(bind-val GL_SMOOTH_POINT_SIZE_GRANULARITY i32 #x0B13)
(bind-val GL_SMOOTH_LINE_WIDTH_RANGE i32 #x0B22)
(bind-val GL_SMOOTH_LINE_WIDTH_GRANULARITY i32 #x0B23)
(bind-val GL_ALIASED_LINE_WIDTH_RANGE i32 #x846E)

;; void glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, void* indices);
(bind-gl-proc libGL glDrawRangeElements [void,GLenum,GLuint,GLuint,GLsizei,GLenum,i8*]*)
;; void glTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, void* pixels);
(bind-gl-proc libGL glTexImage3D [void,GLenum,GLint,GLint,GLsizei,GLsizei,GLsizei,GLint,GLenum,GLenum,i8*]*)
;; void glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void* pixels);
(bind-gl-proc libGL glTexSubImage3D [void,GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLenum,i8*]*)
;; void glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
(bind-gl-proc libGL glCopyTexSubImage3D [void,GLenum,GLint,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei]*)
;; #endif /* GL_VERSION_1_2 */

;; #ifndef GL_VERSION_1_3
(bind-val GL_VERSION_1_3 i32 1)
(bind-val GL_TEXTURE0 i32 #x84C0)
(bind-val GL_TEXTURE1 i32 #x84C1)
(bind-val GL_TEXTURE2 i32 #x84C2)
(bind-val GL_TEXTURE3 i32 #x84C3)
(bind-val GL_TEXTURE4 i32 #x84C4)
(bind-val GL_TEXTURE5 i32 #x84C5)
(bind-val GL_TEXTURE6 i32 #x84C6)
(bind-val GL_TEXTURE7 i32 #x84C7)
(bind-val GL_TEXTURE8 i32 #x84C8)
(bind-val GL_TEXTURE9 i32 #x84C9)
(bind-val GL_TEXTURE10 i32 #x84CA)
(bind-val GL_TEXTURE11 i32 #x84CB)
(bind-val GL_TEXTURE12 i32 #x84CC)
(bind-val GL_TEXTURE13 i32 #x84CD)
(bind-val GL_TEXTURE14 i32 #x84CE)
(bind-val GL_TEXTURE15 i32 #x84CF)
(bind-val GL_TEXTURE16 i32 #x84D0)
(bind-val GL_TEXTURE17 i32 #x84D1)
(bind-val GL_TEXTURE18 i32 #x84D2)
(bind-val GL_TEXTURE19 i32 #x84D3)
(bind-val GL_TEXTURE20 i32 #x84D4)
(bind-val GL_TEXTURE21 i32 #x84D5)
(bind-val GL_TEXTURE22 i32 #x84D6)
(bind-val GL_TEXTURE23 i32 #x84D7)
(bind-val GL_TEXTURE24 i32 #x84D8)
(bind-val GL_TEXTURE25 i32 #x84D9)
(bind-val GL_TEXTURE26 i32 #x84DA)
(bind-val GL_TEXTURE27 i32 #x84DB)
(bind-val GL_TEXTURE28 i32 #x84DC)
(bind-val GL_TEXTURE29 i32 #x84DD)
(bind-val GL_TEXTURE30 i32 #x84DE)
(bind-val GL_TEXTURE31 i32 #x84DF)
(bind-val GL_ACTIVE_TEXTURE i32 #x84E0)
(bind-val GL_MULTISAMPLE i32 #x809D)
(bind-val GL_SAMPLE_ALPHA_TO_COVERAGE i32 #x809E)
(bind-val GL_SAMPLE_ALPHA_TO_ONE i32 #x809F)
(bind-val GL_SAMPLE_COVERAGE i32 #x80A0)
(bind-val GL_SAMPLE_BUFFERS i32 #x80A8)
(bind-val GL_SAMPLES i32 #x80A9)
(bind-val GL_SAMPLE_COVERAGE_VALUE i32 #x80AA)
(bind-val GL_SAMPLE_COVERAGE_INVERT i32 #x80AB)
(bind-val GL_TEXTURE_CUBE_MAP i32 #x8513)
(bind-val GL_TEXTURE_BINDING_CUBE_MAP i32 #x8514)
(bind-val GL_TEXTURE_CUBE_MAP_POSITIVE_X i32 #x8515)
(bind-val GL_TEXTURE_CUBE_MAP_NEGATIVE_X i32 #x8516)
(bind-val GL_TEXTURE_CUBE_MAP_POSITIVE_Y i32 #x8517)
(bind-val GL_TEXTURE_CUBE_MAP_NEGATIVE_Y i32 #x8518)
(bind-val GL_TEXTURE_CUBE_MAP_POSITIVE_Z i32 #x8519)
(bind-val GL_TEXTURE_CUBE_MAP_NEGATIVE_Z i32 #x851A)
(bind-val GL_PROXY_TEXTURE_CUBE_MAP i32 #x851B)
(bind-val GL_MAX_CUBE_MAP_TEXTURE_SIZE i32 #x851C)
(bind-val GL_COMPRESSED_RGB i32 #x84ED)
(bind-val GL_COMPRESSED_RGBA i32 #x84EE)
(bind-val GL_TEXTURE_COMPRESSION_HINT i32 #x84EF)
(bind-val GL_TEXTURE_COMPRESSED_IMAGE_SIZE i32 #x86A0)
(bind-val GL_TEXTURE_COMPRESSED i32 #x86A1)
(bind-val GL_NUM_COMPRESSED_TEXTURE_FORMATS i32 #x86A2)
(bind-val GL_COMPRESSED_TEXTURE_FORMATS i32 #x86A3)
(bind-val GL_CLAMP_TO_BORDER i32 #x812D)

;; void glActiveTexture(GLenum texture);
(bind-gl-proc libGL glActiveTexture [void,GLenum]*)
;; void glSampleCoverage(GLfloat value, GLboolean invert);
(bind-gl-proc libGL glSampleCoverage [void,GLfloat,GLboolean]*)
;; void glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, void* data);
(bind-gl-proc libGL glCompressedTexImage3D [void,GLenum,GLint,GLenum,GLsizei,GLsizei,GLsizei,GLint,GLsizei,i8*]*)
;; void glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, void* data);
(bind-gl-proc libGL glCompressedTexImage2D [void,GLenum,GLint,GLenum,GLsizei,GLsizei,GLint,GLsizei,i8*]*)
;; void glCompressedTexImage1D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, void* data);
(bind-gl-proc libGL glCompressedTexImage1D [void,GLenum,GLint,GLenum,GLsizei,GLint,GLsizei,i8*]*)
;; void glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, void* data);
(bind-gl-proc libGL glCompressedTexSubImage3D [void,GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLsizei,i8*]*)
;; void glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, void* data);
(bind-gl-proc libGL glCompressedTexSubImage2D [void,GLenum,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLsizei,i8*]*)
;; void glCompressedTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, void* data);
(bind-gl-proc libGL glCompressedTexSubImage1D [void,GLenum,GLint,GLint,GLsizei,GLenum,GLsizei,i8*]*)
;; void glGetCompressedTexImage(GLenum target, GLint level, void *img);
(bind-gl-proc libGL glGetCompressedTexImage [void,GLenum,GLint,i8*]*)
;; #endif /* GL_VERSION_1_3 */

;; #ifndef GL_VERSION_1_4
(bind-val GL_VERSION_1_4 i32 1)
(bind-val GL_BLEND_DST_RGB i32 #x80C8)
(bind-val GL_BLEND_SRC_RGB i32 #x80C9)
(bind-val GL_BLEND_DST_ALPHA i32 #x80CA)
(bind-val GL_BLEND_SRC_ALPHA i32 #x80CB)
(bind-val GL_POINT_FADE_THRESHOLD_SIZE i32 #x8128)
(bind-val GL_DEPTH_COMPONENT16 i32 #x81A5)
(bind-val GL_DEPTH_COMPONENT24 i32 #x81A6)
(bind-val GL_DEPTH_COMPONENT32 i32 #x81A7)
(bind-val GL_MIRRORED_REPEAT i32 #x8370)
(bind-val GL_MAX_TEXTURE_LOD_BIAS i32 #x84FD)
(bind-val GL_TEXTURE_LOD_BIAS i32 #x8501)
(bind-val GL_INCR_WRAP i32 #x8507)
(bind-val GL_DECR_WRAP i32 #x8508)
(bind-val GL_TEXTURE_DEPTH_SIZE i32 #x884A)
(bind-val GL_TEXTURE_COMPARE_MODE i32 #x884C)
(bind-val GL_TEXTURE_COMPARE_FUNC i32 #x884D)
(bind-val GL_FUNC_ADD i32 #x8006)
(bind-val GL_FUNC_SUBTRACT i32 #x800A)
(bind-val GL_FUNC_REVERSE_SUBTRACT i32 #x800B)
(bind-val GL_MIN i32 #x8007)
(bind-val GL_MAX i32 #x8008)
(bind-val GL_CONSTANT_COLOR i32 #x8001)
(bind-val GL_ONE_MINUS_CONSTANT_COLOR i32 #x8002)
(bind-val GL_CONSTANT_ALPHA i32 #x8003)
(bind-val GL_ONE_MINUS_CONSTANT_ALPHA i32 #x8004)

;; void glBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
(bind-gl-proc libGL glBlendFuncSeparate [void,GLenum,GLenum,GLenum,GLenum]*)
;; void glMultiDrawArrays(GLenum mode, GLint* first, GLsizei* count, GLsizei drawcount);
(bind-gl-proc libGL glMultiDrawArrays [void,GLenum,GLint*,GLsizei*,GLsizei]*)
;; void glMultiDrawElements(GLenum mode, GLsizei* count, GLenum type, void** indices, GLsizei drawcount);
(bind-gl-proc libGL glMultiDrawElements [void,GLenum,GLsizei*,GLenum,GLvoid**,GLsizei]*)
;; void glPointParameterf(GLenum pname, GLfloat param);
(bind-gl-proc libGL glPointParameterf [void,GLenum,GLfloat]*)
;; void glPointParameterfv(GLenum pname, GLfloat* params);
(bind-gl-proc libGL glPointParameterfv [void,GLenum,GLfloat*]*)
;; void glPointParameteri(GLenum pname, GLint param);
(bind-gl-proc libGL glPointParameteri [void,GLenum,GLint]*)
;; void glPointParameteriv(GLenum pname, GLint* params);
(bind-gl-proc libGL glPointParameteriv [void,GLenum,GLint*]*)
;; void glBlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
(bind-gl-proc libGL glBlendColor [void,GLfloat,GLfloat,GLfloat,GLfloat]*)
;; void glBlendEquation(GLenum mode);
(bind-gl-proc libGL glBlendEquation [void,GLenum]*)
;; #endif /* GL_VERSION_1_4 */

;; #ifndef GL_VERSION_1_5
(bind-val GL_VERSION_1_5 i32 1)
(bind-alias GLsizeiptr i64) ;; ptrdiff_t
(bind-alias GLintptr i64) ;; ptrdiff_t
(bind-val GL_BUFFER_SIZE i32 #x8764)
(bind-val GL_BUFFER_USAGE i32 #x8765)
(bind-val GL_QUERY_COUNTER_BITS i32 #x8864)
(bind-val GL_CURRENT_QUERY i32 #x8865)
(bind-val GL_QUERY_RESULT i32 #x8866)
(bind-val GL_QUERY_RESULT_AVAILABLE i32 #x8867)
(bind-val GL_ARRAY_BUFFER i32 #x8892)
(bind-val GL_ELEMENT_ARRAY_BUFFER i32 #x8893)
(bind-val GL_ARRAY_BUFFER_BINDING i32 #x8894)
(bind-val GL_ELEMENT_ARRAY_BUFFER_BINDING i32 #x8895)
(bind-val GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING i32 #x889F)
(bind-val GL_READ_ONLY i32 #x88B8)
(bind-val GL_WRITE_ONLY i32 #x88B9)
(bind-val GL_READ_WRITE i32 #x88BA)
(bind-val GL_BUFFER_ACCESS i32 #x88BB)
(bind-val GL_BUFFER_MAPPED i32 #x88BC)
(bind-val GL_BUFFER_MAP_POINTER i32 #x88BD)
(bind-val GL_STREAM_DRAW i32 #x88E0)
(bind-val GL_STREAM_READ i32 #x88E1)
(bind-val GL_STREAM_COPY i32 #x88E2)
(bind-val GL_STATIC_DRAW i32 #x88E4)
(bind-val GL_STATIC_READ i32 #x88E5)
(bind-val GL_STATIC_COPY i32 #x88E6)
(bind-val GL_DYNAMIC_DRAW i32 #x88E8)
(bind-val GL_DYNAMIC_READ i32 #x88E9)
(bind-val GL_DYNAMIC_COPY i32 #x88EA)
(bind-val GL_SAMPLES_PASSED i32 #x8914)
(bind-val GL_SRC1_ALPHA i32 #x8589)

;; void glGenQueries(GLsizei n, GLuint *ids);
(bind-gl-proc libGL glGenQueries [void,GLsizei,GLuint*]*)
;; void glDeleteQueries(GLsizei n, GLuint* ids);
(bind-gl-proc libGL glDeleteQueries [void,GLsizei,GLuint*]*)
;; GLboolean glIsQuery(GLuint id);
(bind-gl-proc libGL glIsQuery [GLboolean,GLuint]*)
;; void glBeginQuery(GLenum target, GLuint id);
(bind-gl-proc libGL glBeginQuery [void,GLenum,GLuint]*)
;; void glEndQuery(GLenum target);
(bind-gl-proc libGL glEndQuery [void,GLenum]*)
;; void glGetQueryiv(GLenum target, GLenum pname, GLint *params);
(bind-gl-proc libGL glGetQueryiv [void,GLenum,GLenum,GLint*]*)
;; void glGetQueryObjectiv(GLuint id, GLenum pname, GLint *params);
(bind-gl-proc libGL glGetQueryObjectiv [void,GLuint,GLenum,GLint*]*)
;; void glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint *params);
(bind-gl-proc libGL glGetQueryObjectuiv [void,GLuint,GLenum,GLuint*]*)
;; void glBindBuffer(GLenum target, GLuint buffer);
(bind-gl-proc libGL glBindBuffer [void,GLenum,GLuint]*)
;; void glDeleteBuffers(GLsizei n, GLuint* buffers);
(bind-gl-proc libGL glDeleteBuffers [void,GLsizei,GLuint*]*)
;; void glGenBuffers(GLsizei n, GLuint *buffers);
(bind-gl-proc libGL glGenBuffers [void,GLsizei,GLuint*]*)
;; GLboolean glIsBuffer(GLuint buffer);
(bind-gl-proc libGL glIsBuffer [GLboolean,GLuint]*)
;; void glBufferData(GLenum target, GLsizeiptr size, void* data, GLenum usage);
(bind-gl-proc libGL glBufferData [void,GLenum,GLsizeiptr,i8*,GLenum]*)
;; void glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, void* data);
(bind-gl-proc libGL glBufferSubData [void,GLenum,GLintptr,GLsizeiptr,i8*]*)
;; void glGetBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, void *data);
(bind-gl-proc libGL glGetBufferSubData [void,GLenum,GLintptr,GLsizeiptr,i8*]*)
;; void* glMapBuffer(GLenum target, GLenum access);
(bind-gl-proc libGL glMapBuffer [i8*,GLenum,GLenum]*)
;; GLboolean glUnmapBuffer(GLenum target);
(bind-gl-proc libGL glUnmapBuffer [GLboolean,GLenum]*)
;; void glGetBufferParameteriv(GLenum target, GLenum pname, GLint *params);
(bind-gl-proc libGL glGetBufferParameteriv [void,GLenum,GLenum,GLint*]*)
;; void glGetBufferPointerv(GLenum target, GLenum pname, void **params);
(bind-gl-proc libGL glGetBufferPointerv [void,GLenum,GLenum,GLvoid**]*)
;; #endif /* GL_VERSION_1_5 */

;; #ifndef GL_VERSION_2_0
(bind-val GL_VERSION_2_0 i32 1)
(bind-val GL_BLEND_EQUATION_RGB i32 #x8009)
(bind-val GL_VERTEX_ATTRIB_ARRAY_ENABLED i32 #x8622)
(bind-val GL_VERTEX_ATTRIB_ARRAY_SIZE i32 #x8623)
(bind-val GL_VERTEX_ATTRIB_ARRAY_STRIDE i32 #x8624)
(bind-val GL_VERTEX_ATTRIB_ARRAY_TYPE i32 #x8625)
(bind-val GL_CURRENT_VERTEX_ATTRIB i32 #x8626)
(bind-val GL_VERTEX_PROGRAM_POINT_SIZE i32 #x8642)
(bind-val GL_VERTEX_ATTRIB_ARRAY_POINTER i32 #x8645)
(bind-val GL_STENCIL_BACK_FUNC i32 #x8800)
(bind-val GL_STENCIL_BACK_FAIL i32 #x8801)
(bind-val GL_STENCIL_BACK_PASS_DEPTH_FAIL i32 #x8802)
(bind-val GL_STENCIL_BACK_PASS_DEPTH_PASS i32 #x8803)
(bind-val GL_MAX_DRAW_BUFFERS i32 #x8824)
(bind-val GL_DRAW_BUFFER0 i32 #x8825)
(bind-val GL_DRAW_BUFFER1 i32 #x8826)
(bind-val GL_DRAW_BUFFER2 i32 #x8827)
(bind-val GL_DRAW_BUFFER3 i32 #x8828)
(bind-val GL_DRAW_BUFFER4 i32 #x8829)
(bind-val GL_DRAW_BUFFER5 i32 #x882A)
(bind-val GL_DRAW_BUFFER6 i32 #x882B)
(bind-val GL_DRAW_BUFFER7 i32 #x882C)
(bind-val GL_DRAW_BUFFER8 i32 #x882D)
(bind-val GL_DRAW_BUFFER9 i32 #x882E)
(bind-val GL_DRAW_BUFFER10 i32 #x882F)
(bind-val GL_DRAW_BUFFER11 i32 #x8830)
(bind-val GL_DRAW_BUFFER12 i32 #x8831)
(bind-val GL_DRAW_BUFFER13 i32 #x8832)
(bind-val GL_DRAW_BUFFER14 i32 #x8833)
(bind-val GL_DRAW_BUFFER15 i32 #x8834)
(bind-val GL_BLEND_EQUATION_ALPHA i32 #x883D)
(bind-val GL_MAX_VERTEX_ATTRIBS i32 #x8869)
(bind-val GL_VERTEX_ATTRIB_ARRAY_NORMALIZED i32 #x886A)
(bind-val GL_MAX_TEXTURE_IMAGE_UNITS i32 #x8872)
(bind-val GL_FRAGMENT_SHADER i32 #x8B30)
(bind-val GL_VERTEX_SHADER i32 #x8B31)
(bind-val GL_MAX_FRAGMENT_UNIFORM_COMPONENTS i32 #x8B49)
(bind-val GL_MAX_VERTEX_UNIFORM_COMPONENTS i32 #x8B4A)
(bind-val GL_MAX_VARYING_FLOATS i32 #x8B4B)
(bind-val GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS i32 #x8B4C)
(bind-val GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS i32 #x8B4D)
(bind-val GL_SHADER_TYPE i32 #x8B4F)
(bind-val GL_FLOAT_VEC2 i32 #x8B50)
(bind-val GL_FLOAT_VEC3 i32 #x8B51)
(bind-val GL_FLOAT_VEC4 i32 #x8B52)
(bind-val GL_INT_VEC2 i32 #x8B53)
(bind-val GL_INT_VEC3 i32 #x8B54)
(bind-val GL_INT_VEC4 i32 #x8B55)
(bind-val GL_BOOL i32 #x8B56)
(bind-val GL_BOOL_VEC2 i32 #x8B57)
(bind-val GL_BOOL_VEC3 i32 #x8B58)
(bind-val GL_BOOL_VEC4 i32 #x8B59)
(bind-val GL_FLOAT_MAT2 i32 #x8B5A)
(bind-val GL_FLOAT_MAT3 i32 #x8B5B)
(bind-val GL_FLOAT_MAT4 i32 #x8B5C)
(bind-val GL_SAMPLER_1D i32 #x8B5D)
(bind-val GL_SAMPLER_2D i32 #x8B5E)
(bind-val GL_SAMPLER_3D i32 #x8B5F)
(bind-val GL_SAMPLER_CUBE i32 #x8B60)
(bind-val GL_SAMPLER_1D_SHADOW i32 #x8B61)
(bind-val GL_SAMPLER_2D_SHADOW i32 #x8B62)
(bind-val GL_DELETE_STATUS i32 #x8B80)
(bind-val GL_COMPILE_STATUS i32 #x8B81)
(bind-val GL_LINK_STATUS i32 #x8B82)
(bind-val GL_VALIDATE_STATUS i32 #x8B83)
(bind-val GL_INFO_LOG_LENGTH i32 #x8B84)
(bind-val GL_ATTACHED_SHADERS i32 #x8B85)
(bind-val GL_ACTIVE_UNIFORMS i32 #x8B86)
(bind-val GL_ACTIVE_UNIFORM_MAX_LENGTH i32 #x8B87)
(bind-val GL_SHADER_SOURCE_LENGTH i32 #x8B88)
(bind-val GL_ACTIVE_ATTRIBUTES i32 #x8B89)
(bind-val GL_ACTIVE_ATTRIBUTE_MAX_LENGTH i32 #x8B8A)
(bind-val GL_FRAGMENT_SHADER_DERIVATIVE_HINT i32 #x8B8B)
(bind-val GL_SHADING_LANGUAGE_VERSION i32 #x8B8C)
(bind-val GL_CURRENT_PROGRAM i32 #x8B8D)
(bind-val GL_POINT_SPRITE_COORD_ORIGIN i32 #x8CA0)
(bind-val GL_LOWER_LEFT i32 #x8CA1)
(bind-val GL_UPPER_LEFT i32 #x8CA2)
(bind-val GL_STENCIL_BACK_REF i32 #x8CA3)
(bind-val GL_STENCIL_BACK_VALUE_MASK i32 #x8CA4)
(bind-val GL_STENCIL_BACK_WRITEMASK i32 #x8CA5)

;; void glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha);
(bind-gl-proc libGL glBlendEquationSeparate [void,GLenum,GLenum]*)
;; void glDrawBuffers(GLsizei n, GLenum* bufs);
(bind-gl-proc libGL glDrawBuffers [void,GLsizei,GLenum*]*)
;; void glStencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
(bind-gl-proc libGL glStencilOpSeparate [void,GLenum,GLenum,GLenum,GLenum]*)
;; void glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask);
(bind-gl-proc libGL glStencilFuncSeparate [void,GLenum,GLenum,GLint,GLuint]*)
;; void glStencilMaskSeparate(GLenum face, GLuint mask);
(bind-gl-proc libGL glStencilMaskSeparate [void,GLenum,GLuint]*)
;; void glAttachShader(GLuint program, GLuint shader);
(bind-gl-proc libGL glAttachShader [void,GLuint,GLuint]*)
;; void glBindAttribLocation(GLuint program, GLuint index, GLchar* name);
(bind-gl-proc libGL glBindAttribLocation [void,GLuint,GLuint,GLchar*]*)
;; void glCompileShader(GLuint shader);
(bind-gl-proc libGL glCompileShader [void,GLuint]*)
;; GLuint glCreateProgram(void);
(bind-gl-proc libGL glCreateProgram [GLuint]*)
;; GLuint glCreateShader(GLenum type);
(bind-gl-proc libGL glCreateShader [GLuint,GLenum]*)
;; void glDeleteProgram(GLuint program);
(bind-gl-proc libGL glDeleteProgram [void,GLuint]*)
;; void glDeleteShader(GLuint shader);
(bind-gl-proc libGL glDeleteShader [void,GLuint]*)
;; void glDetachShader(GLuint program, GLuint shader);
(bind-gl-proc libGL glDetachShader [void,GLuint,GLuint]*)
;; void glDisableVertexAttribArray(GLuint index);
(bind-gl-proc libGL glDisableVertexAttribArray [void,GLuint]*)
;; void glEnableVertexAttribArray(GLuint index);
(bind-gl-proc libGL glEnableVertexAttribArray [void,GLuint]*)
;; void glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
(bind-gl-proc libGL glGetActiveAttrib [void,GLuint,GLuint,GLsizei,GLsizei*,GLint*,GLenum*,GLchar*]*)
;; void glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
(bind-gl-proc libGL glGetActiveUniform [void,GLuint,GLuint,GLsizei,GLsizei*,GLint*,GLenum*,GLchar*]*)
;; void glGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
(bind-gl-proc libGL glGetAttachedShaders [void,GLuint,GLsizei,GLsizei*,GLuint*]*)
;; GLint glGetAttribLocation(GLuint program, GLchar* name);
(bind-gl-proc libGL glGetAttribLocation [GLint,GLuint,GLchar*]*)
;; void glGetProgramiv(GLuint program, GLenum pname, GLint *params);
(bind-gl-proc libGL glGetProgramiv [void,GLuint,GLenum,GLint*]*)
;; void glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
(bind-gl-proc libGL glGetProgramInfoLog [void,GLuint,GLsizei,GLsizei*,GLchar*]*)
;; void glGetShaderiv(GLuint shader, GLenum pname, GLint *params);
(bind-gl-proc libGL glGetShaderiv [void,GLuint,GLenum,GLint*]*)
;; void glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
(bind-gl-proc libGL glGetShaderInfoLog [void,GLuint,GLsizei,GLsizei*,GLchar*]*)
;; void glGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
(bind-gl-proc libGL glGetShaderSource [void,GLuint,GLsizei,GLsizei*,GLchar*]*)
;; GLint glGetUniformLocation(GLuint program, GLchar* name);
(bind-gl-proc libGL glGetUniformLocation [GLint,GLuint,GLchar*]*)
;; void glGetUniformfv(GLuint program, GLint location, GLfloat *params);
(bind-gl-proc libGL glGetUniformfv [void,GLuint,GLint,GLfloat*]*)
;; void glGetUniformiv(GLuint program, GLint location, GLint *params);
(bind-gl-proc libGL glGetUniformiv [void,GLuint,GLint,GLint*]*)
;; void glGetVertexAttribdv(GLuint index, GLenum pname, GLdouble *params);
(bind-gl-proc libGL glGetVertexAttribdv [void,GLuint,GLenum,GLdouble*]*)
;; void glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat *params);
(bind-gl-proc libGL glGetVertexAttribfv [void,GLuint,GLenum,GLfloat*]*)
;; void glGetVertexAttribiv(GLuint index, GLenum pname, GLint *params);
(bind-gl-proc libGL glGetVertexAttribiv [void,GLuint,GLenum,GLint*]*)
;; void glGetVertexAttribPointerv(GLuint index, GLenum pname, void **pointer);
(bind-gl-proc libGL glGetVertexAttribPointerv [void,GLuint,GLenum,GLvoid**]*)
;; GLboolean glIsProgram(GLuint program);
(bind-gl-proc libGL glIsProgram [GLboolean,GLuint]*)
;; GLboolean glIsShader(GLuint shader);
(bind-gl-proc libGL glIsShader [GLboolean,GLuint]*)
;; void glLinkProgram(GLuint program);
(bind-gl-proc libGL glLinkProgram [void,GLuint]*)
;; void glShaderSource(GLuint shader, GLsizei count, GLchar** string, GLint* length);
(bind-gl-proc libGL glShaderSource [void,GLuint,GLsizei,GLchar**,GLint*]*)
;; void glUseProgram(GLuint program);
(bind-gl-proc libGL glUseProgram [void,GLuint]*)
;; void glUniform1f(GLint location, GLfloat v0);
(bind-gl-proc libGL glUniform1f [void,GLint,GLfloat]*)
;; void glUniform2f(GLint location, GLfloat v0, GLfloat v1);
(bind-gl-proc libGL glUniform2f [void,GLint,GLfloat,GLfloat]*)
;; void glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
(bind-gl-proc libGL glUniform3f [void,GLint,GLfloat,GLfloat,GLfloat]*)
;; void glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
(bind-gl-proc libGL glUniform4f [void,GLint,GLfloat,GLfloat,GLfloat,GLfloat]*)
;; void glUniform1i(GLint location, GLint v0);
(bind-gl-proc libGL glUniform1i [void,GLint,GLint]*)
;; void glUniform2i(GLint location, GLint v0, GLint v1);
(bind-gl-proc libGL glUniform2i [void,GLint,GLint,GLint]*)
;; void glUniform3i(GLint location, GLint v0, GLint v1, GLint v2);
(bind-gl-proc libGL glUniform3i [void,GLint,GLint,GLint,GLint]*)
;; void glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
(bind-gl-proc libGL glUniform4i [void,GLint,GLint,GLint,GLint,GLint]*)
;; void glUniform1fv(GLint location, GLsizei count, GLfloat* value);
(bind-gl-proc libGL glUniform1fv [void,GLint,GLsizei,GLfloat*]*)
;; void glUniform2fv(GLint location, GLsizei count, GLfloat* value);
(bind-gl-proc libGL glUniform2fv [void,GLint,GLsizei,GLfloat*]*)
;; void glUniform3fv(GLint location, GLsizei count, GLfloat* value);
(bind-gl-proc libGL glUniform3fv [void,GLint,GLsizei,GLfloat*]*)
;; void glUniform4fv(GLint location, GLsizei count, GLfloat* value);
(bind-gl-proc libGL glUniform4fv [void,GLint,GLsizei,GLfloat*]*)
;; void glUniform1iv(GLint location, GLsizei count, GLint* value);
(bind-gl-proc libGL glUniform1iv [void,GLint,GLsizei,GLint*]*)
;; void glUniform2iv(GLint location, GLsizei count, GLint* value);
(bind-gl-proc libGL glUniform2iv [void,GLint,GLsizei,GLint*]*)
;; void glUniform3iv(GLint location, GLsizei count, GLint* value);
(bind-gl-proc libGL glUniform3iv [void,GLint,GLsizei,GLint*]*)
;; void glUniform4iv(GLint location, GLsizei count, GLint* value);
(bind-gl-proc libGL glUniform4iv [void,GLint,GLsizei,GLint*]*)
;; void glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
(bind-gl-proc libGL glUniformMatrix2fv [void,GLint,GLsizei,GLboolean,GLfloat*]*)
;; void glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
(bind-gl-proc libGL glUniformMatrix3fv [void,GLint,GLsizei,GLboolean,GLfloat*]*)
;; void glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
(bind-gl-proc libGL glUniformMatrix4fv [void,GLint,GLsizei,GLboolean,GLfloat*]*)
;; void glValidateProgram(GLuint program);
(bind-gl-proc libGL glValidateProgram [void,GLuint]*)
;; void glVertexAttrib1d(GLuint index, GLdouble x);
(bind-gl-proc libGL glVertexAttrib1d [void,GLuint,GLdouble]*)
;; void glVertexAttrib1dv(GLuint index, const GLdouble *v);
(bind-gl-proc libGL glVertexAttrib1dv [void,GLuint,GLdouble*]*)
;; void glVertexAttrib1f(GLuint index, GLfloat x);
(bind-gl-proc libGL glVertexAttrib1f [void,GLuint,GLfloat]*)
;; void glVertexAttrib1fv(GLuint index, GLfloat* v);
(bind-gl-proc libGL glVertexAttrib1fv [void,GLuint,GLfloat*]*)
;; void glVertexAttrib1s(GLuint index, GLshort x);
(bind-gl-proc libGL glVertexAttrib1s [void,GLuint,GLshort]*)
;; void glVertexAttrib1sv(GLuint index, const GLshort *v);
(bind-gl-proc libGL glVertexAttrib1sv [void,GLuint,GLshort*]*)
;; void glVertexAttrib2d(GLuint index, GLdouble x, GLdouble y);
(bind-gl-proc libGL glVertexAttrib2d [void,GLuint,GLdouble,GLdouble]*)
;; void glVertexAttrib2dv(GLuint index, const GLdouble *v);
(bind-gl-proc libGL glVertexAttrib2dv [void,GLuint,GLdouble*]*)
;; void glVertexAttrib2f(GLuint index, GLfloat x, GLfloat y);
(bind-gl-proc libGL glVertexAttrib2f [void,GLuint,GLfloat,GLfloat]*)
;; void glVertexAttrib2fv(GLuint index, GLfloat* v);
(bind-gl-proc libGL glVertexAttrib2fv [void,GLuint,GLfloat*]*)
;; void glVertexAttrib2s(GLuint index, GLshort x, GLshort y);
(bind-gl-proc libGL glVertexAttrib2s [void,GLuint,GLshort,GLshort]*)
;; void glVertexAttrib2sv(GLuint index, const GLshort *v);
(bind-gl-proc libGL glVertexAttrib2sv [void,GLuint,GLshort*]*)
;; void glVertexAttrib3d(GLuint index, GLdouble x, GLdouble y, GLdouble z);
(bind-gl-proc libGL glVertexAttrib3d [void,GLuint,GLdouble,GLdouble,GLdouble]*)
;; void glVertexAttrib3dv(GLuint index, const GLdouble *v);
(bind-gl-proc libGL glVertexAttrib3dv [void,GLuint,GLdouble*]*)
;; void glVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z);
(bind-gl-proc libGL glVertexAttrib3f [void,GLuint,GLfloat,GLfloat,GLfloat]*)
;; void glVertexAttrib3fv(GLuint index, GLfloat* v);
(bind-gl-proc libGL glVertexAttrib3fv [void,GLuint,GLfloat*]*)
;; void glVertexAttrib3s(GLuint index, GLshort x, GLshort y, GLshort z);
(bind-gl-proc libGL glVertexAttrib3s [void,GLuint,GLshort,GLshort,GLshort]*)
;; void glVertexAttrib3sv(GLuint index, const GLshort *v);
(bind-gl-proc libGL glVertexAttrib3sv [void,GLuint,GLshort*]*)
;; void glVertexAttrib4Nbv(GLuint index, const GLbyte *v);
(bind-gl-proc libGL glVertexAttrib4Nbv [void,GLuint,GLbyte*]*)
;; void glVertexAttrib4Niv(GLuint index, GLint* v);
(bind-gl-proc libGL glVertexAttrib4Niv [void,GLuint,GLint*]*)
;; void glVertexAttrib4Nsv(GLuint index, const GLshort *v);
(bind-gl-proc libGL glVertexAttrib4Nsv [void,GLuint,GLshort*]*)
;; void glVertexAttrib4Nub(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
(bind-gl-proc libGL glVertexAttrib4Nub [void,GLuint,GLubyte,GLubyte,GLubyte,GLubyte]*)
;; void glVertexAttrib4Nubv(GLuint index, const GLubyte *v);
(bind-gl-proc libGL glVertexAttrib4Nubv [void,GLuint,GLubyte*]*)
;; void glVertexAttrib4Nuiv(GLuint index, GLuint* v);
(bind-gl-proc libGL glVertexAttrib4Nuiv [void,GLuint,GLuint*]*)
;; void glVertexAttrib4Nusv(GLuint index, const GLushort *v);
(bind-gl-proc libGL glVertexAttrib4Nusv [void,GLuint,GLushort*]*)
;; void glVertexAttrib4bv(GLuint index, const GLbyte *v);
(bind-gl-proc libGL glVertexAttrib4bv [void,GLuint,GLbyte*]*)
;; void glVertexAttrib4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
(bind-gl-proc libGL glVertexAttrib4d [void,GLuint,GLdouble,GLdouble,GLdouble,GLdouble]*)
;; void glVertexAttrib4dv(GLuint index, const GLdouble *v);
(bind-gl-proc libGL glVertexAttrib4dv [void,GLuint,GLdouble*]*)
;; void glVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
(bind-gl-proc libGL glVertexAttrib4f [void,GLuint,GLfloat,GLfloat,GLfloat,GLfloat]*)
;; void glVertexAttrib4fv(GLuint index, GLfloat* v);
(bind-gl-proc libGL glVertexAttrib4fv [void,GLuint,GLfloat*]*)
;; void glVertexAttrib4iv(GLuint index, GLint* v);
(bind-gl-proc libGL glVertexAttrib4iv [void,GLuint,GLint*]*)
;; void glVertexAttrib4s(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
(bind-gl-proc libGL glVertexAttrib4s [void,GLuint,GLshort,GLshort,GLshort,GLshort]*)
;; void glVertexAttrib4sv(GLuint index, const GLshort *v);
(bind-gl-proc libGL glVertexAttrib4sv [void,GLuint,GLshort*]*)
;; void glVertexAttrib4ubv(GLuint index, const GLubyte *v);
(bind-gl-proc libGL glVertexAttrib4ubv [void,GLuint,GLubyte*]*)
;; void glVertexAttrib4uiv(GLuint index, GLuint* v);
(bind-gl-proc libGL glVertexAttrib4uiv [void,GLuint,GLuint*]*)
;; void glVertexAttrib4usv(GLuint index, const GLushort *v);
(bind-gl-proc libGL glVertexAttrib4usv [void,GLuint,GLushort*]*)
;; void glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, void* pointer);
(bind-gl-proc libGL glVertexAttribPointer [void,GLuint,GLint,GLenum,GLboolean,GLsizei,i8*]*)
;; #endif /* GL_VERSION_2_0 */

;; #ifndef GL_VERSION_2_1
(bind-val GL_VERSION_2_1 i32 1)
(bind-val GL_PIXEL_PACK_BUFFER i32 #x88EB)
(bind-val GL_PIXEL_UNPACK_BUFFER i32 #x88EC)
(bind-val GL_PIXEL_PACK_BUFFER_BINDING i32 #x88ED)
(bind-val GL_PIXEL_UNPACK_BUFFER_BINDING i32 #x88EF)
(bind-val GL_FLOAT_MAT2x3 i32 #x8B65)
(bind-val GL_FLOAT_MAT2x4 i32 #x8B66)
(bind-val GL_FLOAT_MAT3x2 i32 #x8B67)
(bind-val GL_FLOAT_MAT3x4 i32 #x8B68)
(bind-val GL_FLOAT_MAT4x2 i32 #x8B69)
(bind-val GL_FLOAT_MAT4x3 i32 #x8B6A)
(bind-val GL_SRGB i32 #x8C40)
(bind-val GL_SRGB8 i32 #x8C41)
(bind-val GL_SRGB_ALPHA i32 #x8C42)
(bind-val GL_SRGB8_ALPHA8 i32 #x8C43)
(bind-val GL_COMPRESSED_SRGB i32 #x8C48)
(bind-val GL_COMPRESSED_SRGB_ALPHA i32 #x8C49)

;; void glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
(bind-gl-proc libGL glUniformMatrix2x3fv [void,GLint,GLsizei,GLboolean,GLfloat*]*)
;; void glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
(bind-gl-proc libGL glUniformMatrix3x2fv [void,GLint,GLsizei,GLboolean,GLfloat*]*)
;; void glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
(bind-gl-proc libGL glUniformMatrix2x4fv [void,GLint,GLsizei,GLboolean,GLfloat*]*)
;; void glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
(bind-gl-proc libGL glUniformMatrix4x2fv [void,GLint,GLsizei,GLboolean,GLfloat*]*)
;; void glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
(bind-gl-proc libGL glUniformMatrix3x4fv [void,GLint,GLsizei,GLboolean,GLfloat*]*)
;; void glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
(bind-gl-proc libGL glUniformMatrix4x3fv [void,GLint,GLsizei,GLboolean,GLfloat*]*)
;; #endif /* GL_VERSION_2_1 */

;; #ifndef GL_VERSION_3_0
(bind-val GL_VERSION_3_0 i32 1)
(bind-val GL_COMPARE_REF_TO_TEXTURE i32 #x884E)
(bind-val GL_CLIP_DISTANCE0 i32 #x3000)
(bind-val GL_CLIP_DISTANCE1 i32 #x3001)
(bind-val GL_CLIP_DISTANCE2 i32 #x3002)
(bind-val GL_CLIP_DISTANCE3 i32 #x3003)
(bind-val GL_CLIP_DISTANCE4 i32 #x3004)
(bind-val GL_CLIP_DISTANCE5 i32 #x3005)
(bind-val GL_CLIP_DISTANCE6 i32 #x3006)
(bind-val GL_CLIP_DISTANCE7 i32 #x3007)
(bind-val GL_MAX_CLIP_DISTANCES i32 #x0D32)
(bind-val GL_MAJOR_VERSION i32 #x821B)
(bind-val GL_MINOR_VERSION i32 #x821C)
(bind-val GL_NUM_EXTENSIONS i32 #x821D)
(bind-val GL_CONTEXT_FLAGS i32 #x821E)
(bind-val GL_COMPRESSED_RED i32 #x8225)
(bind-val GL_COMPRESSED_RG i32 #x8226)
(bind-val GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT i32 #x00000001)
(bind-val GL_RGBA32F i32 #x8814)
(bind-val GL_RGB32F i32 #x8815)
(bind-val GL_RGBA16F i32 #x881A)
(bind-val GL_RGB16F i32 #x881B)
(bind-val GL_VERTEX_ATTRIB_ARRAY_INTEGER i32 #x88FD)
(bind-val GL_MAX_ARRAY_TEXTURE_LAYERS i32 #x88FF)
(bind-val GL_MIN_PROGRAM_TEXEL_OFFSET i32 #x8904)
(bind-val GL_MAX_PROGRAM_TEXEL_OFFSET i32 #x8905)
(bind-val GL_CLAMP_READ_COLOR i32 #x891C)
(bind-val GL_FIXED_ONLY i32 #x891D)
(bind-val GL_MAX_VARYING_COMPONENTS i32 #x8B4B)
(bind-val GL_TEXTURE_1D_ARRAY i32 #x8C18)
(bind-val GL_PROXY_TEXTURE_1D_ARRAY i32 #x8C19)
(bind-val GL_TEXTURE_2D_ARRAY i32 #x8C1A)
(bind-val GL_PROXY_TEXTURE_2D_ARRAY i32 #x8C1B)
(bind-val GL_TEXTURE_BINDING_1D_ARRAY i32 #x8C1C)
(bind-val GL_TEXTURE_BINDING_2D_ARRAY i32 #x8C1D)
(bind-val GL_R11F_G11F_B10F i32 #x8C3A)
(bind-val GL_UNSIGNED_INT_10F_11F_11F_REV i32 #x8C3B)
(bind-val GL_RGB9_E5 i32 #x8C3D)
(bind-val GL_UNSIGNED_INT_5_9_9_9_REV i32 #x8C3E)
(bind-val GL_TEXTURE_SHARED_SIZE i32 #x8C3F)
(bind-val GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH i32 #x8C76)
(bind-val GL_TRANSFORM_FEEDBACK_BUFFER_MODE i32 #x8C7F)
(bind-val GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS i32 #x8C80)
(bind-val GL_TRANSFORM_FEEDBACK_VARYINGS i32 #x8C83)
(bind-val GL_TRANSFORM_FEEDBACK_BUFFER_START i32 #x8C84)
(bind-val GL_TRANSFORM_FEEDBACK_BUFFER_SIZE i32 #x8C85)
(bind-val GL_PRIMITIVES_GENERATED i32 #x8C87)
(bind-val GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN i32 #x8C88)
(bind-val GL_RASTERIZER_DISCARD i32 #x8C89)
(bind-val GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS i32 #x8C8A)
(bind-val GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS i32 #x8C8B)
(bind-val GL_INTERLEAVED_ATTRIBS i32 #x8C8C)
(bind-val GL_SEPARATE_ATTRIBS i32 #x8C8D)
(bind-val GL_TRANSFORM_FEEDBACK_BUFFER i32 #x8C8E)
(bind-val GL_TRANSFORM_FEEDBACK_BUFFER_BINDING i32 #x8C8F)
(bind-val GL_RGBA32UI i32 #x8D70)
(bind-val GL_RGB32UI i32 #x8D71)
(bind-val GL_RGBA16UI i32 #x8D76)
(bind-val GL_RGB16UI i32 #x8D77)
(bind-val GL_RGBA8UI i32 #x8D7C)
(bind-val GL_RGB8UI i32 #x8D7D)
(bind-val GL_RGBA32I i32 #x8D82)
(bind-val GL_RGB32I i32 #x8D83)
(bind-val GL_RGBA16I i32 #x8D88)
(bind-val GL_RGB16I i32 #x8D89)
(bind-val GL_RGBA8I i32 #x8D8E)
(bind-val GL_RGB8I i32 #x8D8F)
(bind-val GL_RED_INTEGER i32 #x8D94)
(bind-val GL_GREEN_INTEGER i32 #x8D95)
(bind-val GL_BLUE_INTEGER i32 #x8D96)
(bind-val GL_RGB_INTEGER i32 #x8D98)
(bind-val GL_RGBA_INTEGER i32 #x8D99)
(bind-val GL_BGR_INTEGER i32 #x8D9A)
(bind-val GL_BGRA_INTEGER i32 #x8D9B)
(bind-val GL_SAMPLER_1D_ARRAY i32 #x8DC0)
(bind-val GL_SAMPLER_2D_ARRAY i32 #x8DC1)
(bind-val GL_SAMPLER_1D_ARRAY_SHADOW i32 #x8DC3)
(bind-val GL_SAMPLER_2D_ARRAY_SHADOW i32 #x8DC4)
(bind-val GL_SAMPLER_CUBE_SHADOW i32 #x8DC5)
(bind-val GL_UNSIGNED_INT_VEC2 i32 #x8DC6)
(bind-val GL_UNSIGNED_INT_VEC3 i32 #x8DC7)
(bind-val GL_UNSIGNED_INT_VEC4 i32 #x8DC8)
(bind-val GL_INT_SAMPLER_1D i32 #x8DC9)
(bind-val GL_INT_SAMPLER_2D i32 #x8DCA)
(bind-val GL_INT_SAMPLER_3D i32 #x8DCB)
(bind-val GL_INT_SAMPLER_CUBE i32 #x8DCC)
(bind-val GL_INT_SAMPLER_1D_ARRAY i32 #x8DCE)
(bind-val GL_INT_SAMPLER_2D_ARRAY i32 #x8DCF)
(bind-val GL_UNSIGNED_INT_SAMPLER_1D i32 #x8DD1)
(bind-val GL_UNSIGNED_INT_SAMPLER_2D i32 #x8DD2)
(bind-val GL_UNSIGNED_INT_SAMPLER_3D i32 #x8DD3)
(bind-val GL_UNSIGNED_INT_SAMPLER_CUBE i32 #x8DD4)
(bind-val GL_UNSIGNED_INT_SAMPLER_1D_ARRAY i32 #x8DD6)
(bind-val GL_UNSIGNED_INT_SAMPLER_2D_ARRAY i32 #x8DD7)
(bind-val GL_QUERY_WAIT i32 #x8E13)
(bind-val GL_QUERY_NO_WAIT i32 #x8E14)
(bind-val GL_QUERY_BY_REGION_WAIT i32 #x8E15)
(bind-val GL_QUERY_BY_REGION_NO_WAIT i32 #x8E16)
(bind-val GL_BUFFER_ACCESS_FLAGS i32 #x911F)
(bind-val GL_BUFFER_MAP_LENGTH i32 #x9120)
(bind-val GL_BUFFER_MAP_OFFSET i32 #x9121)
(bind-val GL_DEPTH_COMPONENT32F i32 #x8CAC)
(bind-val GL_DEPTH32F_STENCIL8 i32 #x8CAD)
(bind-val GL_FLOAT_32_UNSIGNED_INT_24_8_REV i32 #x8DAD)
(bind-val GL_INVALID_FRAMEBUFFER_OPERATION i32 #x0506)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING i32 #x8210)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE i32 #x8211)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE i32 #x8212)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE i32 #x8213)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE i32 #x8214)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE i32 #x8215)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE i32 #x8216)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE i32 #x8217)
(bind-val GL_FRAMEBUFFER_DEFAULT i32 #x8218)
(bind-val GL_FRAMEBUFFER_UNDEFINED i32 #x8219)
(bind-val GL_DEPTH_STENCIL_ATTACHMENT i32 #x821A)
(bind-val GL_MAX_RENDERBUFFER_SIZE i32 #x84E8)
(bind-val GL_DEPTH_STENCIL i32 #x84F9)
(bind-val GL_UNSIGNED_INT_24_8 i32 #x84FA)
(bind-val GL_DEPTH24_STENCIL8 i32 #x88F0)
(bind-val GL_TEXTURE_STENCIL_SIZE i32 #x88F1)
(bind-val GL_TEXTURE_RED_TYPE i32 #x8C10)
(bind-val GL_TEXTURE_GREEN_TYPE i32 #x8C11)
(bind-val GL_TEXTURE_BLUE_TYPE i32 #x8C12)
(bind-val GL_TEXTURE_ALPHA_TYPE i32 #x8C13)
(bind-val GL_TEXTURE_DEPTH_TYPE i32 #x8C16)
(bind-val GL_UNSIGNED_NORMALIZED i32 #x8C17)
(bind-val GL_FRAMEBUFFER_BINDING i32 #x8CA6)
(bind-val GL_DRAW_FRAMEBUFFER_BINDING i32 #x8CA6)
(bind-val GL_RENDERBUFFER_BINDING i32 #x8CA7)
(bind-val GL_READ_FRAMEBUFFER i32 #x8CA8)
(bind-val GL_DRAW_FRAMEBUFFER i32 #x8CA9)
(bind-val GL_READ_FRAMEBUFFER_BINDING i32 #x8CAA)
(bind-val GL_RENDERBUFFER_SAMPLES i32 #x8CAB)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE i32 #x8CD0)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME i32 #x8CD1)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL i32 #x8CD2)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE i32 #x8CD3)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER i32 #x8CD4)
(bind-val GL_FRAMEBUFFER_COMPLETE i32 #x8CD5)
(bind-val GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT i32 #x8CD6)
(bind-val GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT i32 #x8CD7)
(bind-val GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER i32 #x8CDB)
(bind-val GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER i32 #x8CDC)
(bind-val GL_FRAMEBUFFER_UNSUPPORTED i32 #x8CDD)
(bind-val GL_MAX_COLOR_ATTACHMENTS i32 #x8CDF)
(bind-val GL_COLOR_ATTACHMENT0 i32 #x8CE0)
(bind-val GL_COLOR_ATTACHMENT1 i32 #x8CE1)
(bind-val GL_COLOR_ATTACHMENT2 i32 #x8CE2)
(bind-val GL_COLOR_ATTACHMENT3 i32 #x8CE3)
(bind-val GL_COLOR_ATTACHMENT4 i32 #x8CE4)
(bind-val GL_COLOR_ATTACHMENT5 i32 #x8CE5)
(bind-val GL_COLOR_ATTACHMENT6 i32 #x8CE6)
(bind-val GL_COLOR_ATTACHMENT7 i32 #x8CE7)
(bind-val GL_COLOR_ATTACHMENT8 i32 #x8CE8)
(bind-val GL_COLOR_ATTACHMENT9 i32 #x8CE9)
(bind-val GL_COLOR_ATTACHMENT10 i32 #x8CEA)
(bind-val GL_COLOR_ATTACHMENT11 i32 #x8CEB)
(bind-val GL_COLOR_ATTACHMENT12 i32 #x8CEC)
(bind-val GL_COLOR_ATTACHMENT13 i32 #x8CED)
(bind-val GL_COLOR_ATTACHMENT14 i32 #x8CEE)
(bind-val GL_COLOR_ATTACHMENT15 i32 #x8CEF)
(bind-val GL_COLOR_ATTACHMENT16 i32 #x8CF0)
(bind-val GL_COLOR_ATTACHMENT17 i32 #x8CF1)
(bind-val GL_COLOR_ATTACHMENT18 i32 #x8CF2)
(bind-val GL_COLOR_ATTACHMENT19 i32 #x8CF3)
(bind-val GL_COLOR_ATTACHMENT20 i32 #x8CF4)
(bind-val GL_COLOR_ATTACHMENT21 i32 #x8CF5)
(bind-val GL_COLOR_ATTACHMENT22 i32 #x8CF6)
(bind-val GL_COLOR_ATTACHMENT23 i32 #x8CF7)
(bind-val GL_COLOR_ATTACHMENT24 i32 #x8CF8)
(bind-val GL_COLOR_ATTACHMENT25 i32 #x8CF9)
(bind-val GL_COLOR_ATTACHMENT26 i32 #x8CFA)
(bind-val GL_COLOR_ATTACHMENT27 i32 #x8CFB)
(bind-val GL_COLOR_ATTACHMENT28 i32 #x8CFC)
(bind-val GL_COLOR_ATTACHMENT29 i32 #x8CFD)
(bind-val GL_COLOR_ATTACHMENT30 i32 #x8CFE)
(bind-val GL_COLOR_ATTACHMENT31 i32 #x8CFF)
(bind-val GL_DEPTH_ATTACHMENT i32 #x8D00)
(bind-val GL_STENCIL_ATTACHMENT i32 #x8D20)
(bind-val GL_FRAMEBUFFER i32 #x8D40)
(bind-val GL_RENDERBUFFER i32 #x8D41)
(bind-val GL_RENDERBUFFER_WIDTH i32 #x8D42)
(bind-val GL_RENDERBUFFER_HEIGHT i32 #x8D43)
(bind-val GL_RENDERBUFFER_INTERNAL_FORMAT i32 #x8D44)
(bind-val GL_STENCIL_INDEX1 i32 #x8D46)
(bind-val GL_STENCIL_INDEX4 i32 #x8D47)
(bind-val GL_STENCIL_INDEX8 i32 #x8D48)
(bind-val GL_STENCIL_INDEX16 i32 #x8D49)
(bind-val GL_RENDERBUFFER_RED_SIZE i32 #x8D50)
(bind-val GL_RENDERBUFFER_GREEN_SIZE i32 #x8D51)
(bind-val GL_RENDERBUFFER_BLUE_SIZE i32 #x8D52)
(bind-val GL_RENDERBUFFER_ALPHA_SIZE i32 #x8D53)
(bind-val GL_RENDERBUFFER_DEPTH_SIZE i32 #x8D54)
(bind-val GL_RENDERBUFFER_STENCIL_SIZE i32 #x8D55)
(bind-val GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE i32 #x8D56)
(bind-val GL_MAX_SAMPLES i32 #x8D57)
(bind-val GL_FRAMEBUFFER_SRGB i32 #x8DB9)
(bind-val GL_HALF_FLOAT i32 #x140B)
(bind-val GL_MAP_READ_BIT i32 #x0001)
(bind-val GL_MAP_WRITE_BIT i32 #x0002)
(bind-val GL_MAP_INVALIDATE_RANGE_BIT i32 #x0004)
(bind-val GL_MAP_INVALIDATE_BUFFER_BIT i32 #x0008)
(bind-val GL_MAP_FLUSH_EXPLICIT_BIT i32 #x0010)
(bind-val GL_MAP_UNSYNCHRONIZED_BIT i32 #x0020)
(bind-val GL_COMPRESSED_RED_RGTC1 i32 #x8DBB)
(bind-val GL_COMPRESSED_SIGNED_RED_RGTC1 i32 #x8DBC)
(bind-val GL_COMPRESSED_RG_RGTC2 i32 #x8DBD)
(bind-val GL_COMPRESSED_SIGNED_RG_RGTC2 i32 #x8DBE)
(bind-val GL_RG i32 #x8227)
(bind-val GL_RG_INTEGER i32 #x8228)
(bind-val GL_R8 i32 #x8229)
(bind-val GL_R16 i32 #x822A)
(bind-val GL_RG8 i32 #x822B)
(bind-val GL_RG16 i32 #x822C)
(bind-val GL_R16F i32 #x822D)
(bind-val GL_R32F i32 #x822E)
(bind-val GL_RG16F i32 #x822F)
(bind-val GL_RG32F i32 #x8230)
(bind-val GL_R8I i32 #x8231)
(bind-val GL_R8UI i32 #x8232)
(bind-val GL_R16I i32 #x8233)
(bind-val GL_R16UI i32 #x8234)
(bind-val GL_R32I i32 #x8235)
(bind-val GL_R32UI i32 #x8236)
(bind-val GL_RG8I i32 #x8237)
(bind-val GL_RG8UI i32 #x8238)
(bind-val GL_RG16I i32 #x8239)
(bind-val GL_RG16UI i32 #x823A)
(bind-val GL_RG32I i32 #x823B)
(bind-val GL_RG32UI i32 #x823C)
(bind-val GL_VERTEX_ARRAY_BINDING i32 #x85B5)

;; void glColorMaski(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
(bind-gl-proc libGL glColorMaski [void,GLuint,GLboolean,GLboolean,GLboolean,GLboolean]*)
;; void glGetBooleani_v(GLenum target, GLuint index, GLboolean *data);
(bind-gl-proc libGL glGetBooleani_v [void,GLenum,GLuint,GLboolean*]*)
;; void glGetIntegeri_v(GLenum target, GLuint index, GLint *data);
(bind-gl-proc libGL glGetIntegeri_v [void,GLenum,GLuint,GLint*]*)
;; void glEnablei(GLenum target, GLuint index);
(bind-gl-proc libGL glEnablei [void,GLenum,GLuint]*)
;; void glDisablei(GLenum target, GLuint index);
(bind-gl-proc libGL glDisablei [void,GLenum,GLuint]*)
;; GLboolean glIsEnabledi(GLenum target, GLuint index);
(bind-gl-proc libGL glIsEnabledi [GLboolean,GLenum,GLuint]*)
;; void glBeginTransformFeedback(GLenum primitiveMode);
(bind-gl-proc libGL glBeginTransformFeedback [void,GLenum]*)
;; void glEndTransformFeedback(void);
(bind-gl-proc libGL glEndTransformFeedback [void]*)
;; void glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
(bind-gl-proc libGL glBindBufferRange [void,GLenum,GLuint,GLuint,GLintptr,GLsizeiptr]*)
;; void glBindBufferBase(GLenum target, GLuint index, GLuint buffer);
(bind-gl-proc libGL glBindBufferBase [void,GLenum,GLuint,GLuint]*)
;; void glTransformFeedbackVaryings(GLuint program, GLsizei count, GLchar** varyings, GLenum bufferMode);
(bind-gl-proc libGL glTransformFeedbackVaryings [void,GLuint,GLsizei,GLchar**,GLenum]*)
;; void glGetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
(bind-gl-proc libGL glGetTransformFeedbackVarying [void,GLuint,GLuint,GLsizei,GLsizei*,GLsizei*,GLenum*,GLchar*]*)
;; void glClampColor(GLenum target, GLenum clamp);
(bind-gl-proc libGL glClampColor [void,GLenum,GLenum]*)
;; void glBeginConditionalRender(GLuint id, GLenum mode);
(bind-gl-proc libGL glBeginConditionalRender [void,GLuint,GLenum]*)
;; void glEndConditionalRender(void);
(bind-gl-proc libGL glEndConditionalRender [void]*)
;; void glVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, void* pointer);
(bind-gl-proc libGL glVertexAttribIPointer [void,GLuint,GLint,GLenum,GLsizei,i8*]*)
;; void glGetVertexAttribIiv(GLuint index, GLenum pname, GLint *params);
(bind-gl-proc libGL glGetVertexAttribIiv [void,GLuint,GLenum,GLint*]*)
;; void glGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint *params);
(bind-gl-proc libGL glGetVertexAttribIuiv [void,GLuint,GLenum,GLuint*]*)
;; void glVertexAttribI1i(GLuint index, GLint x);
(bind-gl-proc libGL glVertexAttribI1i [void,GLuint,GLint]*)
;; void glVertexAttribI2i(GLuint index, GLint x, GLint y);
(bind-gl-proc libGL glVertexAttribI2i [void,GLuint,GLint,GLint]*)
;; void glVertexAttribI3i(GLuint index, GLint x, GLint y, GLint z);
(bind-gl-proc libGL glVertexAttribI3i [void,GLuint,GLint,GLint,GLint]*)
;; void glVertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w);
(bind-gl-proc libGL glVertexAttribI4i [void,GLuint,GLint,GLint,GLint,GLint]*)
;; void glVertexAttribI1ui(GLuint index, GLuint x);
(bind-gl-proc libGL glVertexAttribI1ui [void,GLuint,GLuint]*)
;; void glVertexAttribI2ui(GLuint index, GLuint x, GLuint y);
(bind-gl-proc libGL glVertexAttribI2ui [void,GLuint,GLuint,GLuint]*)
;; void glVertexAttribI3ui(GLuint index, GLuint x, GLuint y, GLuint z);
(bind-gl-proc libGL glVertexAttribI3ui [void,GLuint,GLuint,GLuint,GLuint]*)
;; void glVertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
(bind-gl-proc libGL glVertexAttribI4ui [void,GLuint,GLuint,GLuint,GLuint,GLuint]*)
;; void glVertexAttribI1iv(GLuint index, GLint* v);
(bind-gl-proc libGL glVertexAttribI1iv [void,GLuint,GLint*]*)
;; void glVertexAttribI2iv(GLuint index, GLint* v);
(bind-gl-proc libGL glVertexAttribI2iv [void,GLuint,GLint*]*)
;; void glVertexAttribI3iv(GLuint index, GLint* v);
(bind-gl-proc libGL glVertexAttribI3iv [void,GLuint,GLint*]*)
;; void glVertexAttribI4iv(GLuint index, GLint* v);
(bind-gl-proc libGL glVertexAttribI4iv [void,GLuint,GLint*]*)
;; void glVertexAttribI1uiv(GLuint index, GLuint* v);
(bind-gl-proc libGL glVertexAttribI1uiv [void,GLuint,GLuint*]*)
;; void glVertexAttribI2uiv(GLuint index, GLuint* v);
(bind-gl-proc libGL glVertexAttribI2uiv [void,GLuint,GLuint*]*)
;; void glVertexAttribI3uiv(GLuint index, GLuint* v);
(bind-gl-proc libGL glVertexAttribI3uiv [void,GLuint,GLuint*]*)
;; void glVertexAttribI4uiv(GLuint index, GLuint* v);
(bind-gl-proc libGL glVertexAttribI4uiv [void,GLuint,GLuint*]*)
;; void glVertexAttribI4bv(GLuint index, const GLbyte *v);
(bind-gl-proc libGL glVertexAttribI4bv [void,GLuint,GLbyte*]*)
;; void glVertexAttribI4sv(GLuint index, const GLshort *v);
(bind-gl-proc libGL glVertexAttribI4sv [void,GLuint,GLshort*]*)
;; void glVertexAttribI4ubv(GLuint index, const GLubyte *v);
(bind-gl-proc libGL glVertexAttribI4ubv [void,GLuint,GLubyte*]*)
;; void glVertexAttribI4usv(GLuint index, const GLushort *v);
(bind-gl-proc libGL glVertexAttribI4usv [void,GLuint,GLushort*]*)
;; void glGetUniformuiv(GLuint program, GLint location, GLuint *params);
(bind-gl-proc libGL glGetUniformuiv [void,GLuint,GLint,GLuint*]*)
;; void glBindFragDataLocation(GLuint program, GLuint color, GLchar* name);
(bind-gl-proc libGL glBindFragDataLocation [void,GLuint,GLuint,GLchar*]*)
;; GLint glGetFragDataLocation(GLuint program, GLchar* name);
(bind-gl-proc libGL glGetFragDataLocation [GLint,GLuint,GLchar*]*)
;; void glUniform1ui(GLint location, GLuint v0);
(bind-gl-proc libGL glUniform1ui [void,GLint,GLuint]*)
;; void glUniform2ui(GLint location, GLuint v0, GLuint v1);
(bind-gl-proc libGL glUniform2ui [void,GLint,GLuint,GLuint]*)
;; void glUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2);
(bind-gl-proc libGL glUniform3ui [void,GLint,GLuint,GLuint,GLuint]*)
;; void glUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
(bind-gl-proc libGL glUniform4ui [void,GLint,GLuint,GLuint,GLuint,GLuint]*)
;; void glUniform1uiv(GLint location, GLsizei count, GLuint* value);
(bind-gl-proc libGL glUniform1uiv [void,GLint,GLsizei,GLuint*]*)
;; void glUniform2uiv(GLint location, GLsizei count, GLuint* value);
(bind-gl-proc libGL glUniform2uiv [void,GLint,GLsizei,GLuint*]*)
;; void glUniform3uiv(GLint location, GLsizei count, GLuint* value);
(bind-gl-proc libGL glUniform3uiv [void,GLint,GLsizei,GLuint*]*)
;; void glUniform4uiv(GLint location, GLsizei count, GLuint* value);
(bind-gl-proc libGL glUniform4uiv [void,GLint,GLsizei,GLuint*]*)
;; void glTexParameterIiv(GLenum target, GLenum pname, GLint* params);
(bind-gl-proc libGL glTexParameterIiv [void,GLenum,GLenum,GLint*]*)
;; void glTexParameterIuiv(GLenum target, GLenum pname, GLuint* params);
(bind-gl-proc libGL glTexParameterIuiv [void,GLenum,GLenum,GLuint*]*)
;; void glGetTexParameterIiv(GLenum target, GLenum pname, GLint *params);
(bind-gl-proc libGL glGetTexParameterIiv [void,GLenum,GLenum,GLint*]*)
;; void glGetTexParameterIuiv(GLenum target, GLenum pname, GLuint *params);
(bind-gl-proc libGL glGetTexParameterIuiv [void,GLenum,GLenum,GLuint*]*)
;; void glClearBufferiv(GLenum buffer, GLint drawbuffer, GLint* value);
(bind-gl-proc libGL glClearBufferiv [void,GLenum,GLint,GLint*]*)
;; void glClearBufferuiv(GLenum buffer, GLint drawbuffer, GLuint* value);
(bind-gl-proc libGL glClearBufferuiv [void,GLenum,GLint,GLuint*]*)
;; void glClearBufferfv(GLenum buffer, GLint drawbuffer, GLfloat* value);
(bind-gl-proc libGL glClearBufferfv [void,GLenum,GLint,GLfloat*]*)
;; void glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
(bind-gl-proc libGL glClearBufferfi [void,GLenum,GLint,GLfloat,GLint]*)
;; const *APIENTRY glGetStringi(GLenum name, GLuint index);
(bind-gl-proc libGL glGetStringi [GLubyte*,GLenum,GLuint]*)
;; GLboolean glIsRenderbuffer(GLuint renderbuffer);
(bind-gl-proc libGL glIsRenderbuffer [GLboolean,GLuint]*)
;; void glBindRenderbuffer(GLenum target, GLuint renderbuffer);
(bind-gl-proc libGL glBindRenderbuffer [void,GLenum,GLuint]*)
;; void glDeleteRenderbuffers(GLsizei n, GLuint* renderbuffers);
(bind-gl-proc libGL glDeleteRenderbuffers [void,GLsizei,GLuint*]*)
;; void glGenRenderbuffers(GLsizei n, GLuint *renderbuffers);
(bind-gl-proc libGL glGenRenderbuffers [void,GLsizei,GLuint*]*)
;; void glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
(bind-gl-proc libGL glRenderbufferStorage [void,GLenum,GLenum,GLsizei,GLsizei]*)
;; void glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint *params);
(bind-gl-proc libGL glGetRenderbufferParameteriv [void,GLenum,GLenum,GLint*]*)
;; GLboolean glIsFramebuffer(GLuint framebuffer);
(bind-gl-proc libGL glIsFramebuffer [GLboolean,GLuint]*)
;; void glBindFramebuffer(GLenum target, GLuint framebuffer);
(bind-gl-proc libGL glBindFramebuffer [void,GLenum,GLuint]*)
;; void glDeleteFramebuffers(GLsizei n, GLuint* framebuffers);
(bind-gl-proc libGL glDeleteFramebuffers [void,GLsizei,GLuint*]*)
;; void glGenFramebuffers(GLsizei n, GLuint *framebuffers);
(bind-gl-proc libGL glGenFramebuffers [void,GLsizei,GLuint*]*)
;; GLenum glCheckFramebufferStatus(GLenum target);
(bind-gl-proc libGL glCheckFramebufferStatus [GLenum,GLenum]*)
;; void glFramebufferTexture1D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
(bind-gl-proc libGL glFramebufferTexture1D [void,GLenum,GLenum,GLenum,GLuint,GLint]*)
;; void glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
(bind-gl-proc libGL glFramebufferTexture2D [void,GLenum,GLenum,GLenum,GLuint,GLint]*)
;; void glFramebufferTexture3D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
(bind-gl-proc libGL glFramebufferTexture3D [void,GLenum,GLenum,GLenum,GLuint,GLint,GLint]*)
;; void glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
(bind-gl-proc libGL glFramebufferRenderbuffer [void,GLenum,GLenum,GLenum,GLuint]*)
;; void glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint *params);
(bind-gl-proc libGL glGetFramebufferAttachmentParameteriv [void,GLenum,GLenum,GLenum,GLint*]*)
;; void glGenerateMipmap(GLenum target);
(bind-gl-proc libGL glGenerateMipmap [void,GLenum]*)
;; void glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
(bind-gl-proc libGL glBlitFramebuffer [void,GLint,GLint,GLint,GLint,GLint,GLint,GLint,GLint,GLbitfield,GLenum]*)
;; void glRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
(bind-gl-proc libGL glRenderbufferStorageMultisample [void,GLenum,GLsizei,GLenum,GLsizei,GLsizei]*)
;; void glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
(bind-gl-proc libGL glFramebufferTextureLayer [void,GLenum,GLenum,GLuint,GLint,GLint]*)
;; void glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
(bind-gl-proc libGL glMapBufferRange [void*,GLenum,GLintptr,GLsizeiptr,GLbitfield]*)
;; void glFlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length);
(bind-gl-proc libGL glFlushMappedBufferRange [void,GLenum,GLintptr,GLsizeiptr]*)
;; void glBindVertexArray(GLuint array);
(bind-gl-proc libGL glBindVertexArray [void,GLuint]*)
;; void glDeleteVertexArrays(GLsizei n, GLuint* arrays);
(bind-gl-proc libGL glDeleteVertexArrays [void,GLsizei,GLuint*]*)
;; void glGenVertexArrays(GLsizei n, GLuint *arrays);
(bind-gl-proc libGL glGenVertexArrays [void,GLsizei,GLuint*]*)
;; GLboolean glIsVertexArray(GLuint array);
(bind-gl-proc libGL glIsVertexArray [GLboolean,GLuint]*)
;; #endif /* GL_VERSION_3_0 */

;; #ifndef GL_VERSION_3_1
(bind-val GL_VERSION_3_1 i32 1)
(bind-val GL_SAMPLER_2D_RECT i32 #x8B63)
(bind-val GL_SAMPLER_2D_RECT_SHADOW i32 #x8B64)
(bind-val GL_SAMPLER_BUFFER i32 #x8DC2)
(bind-val GL_INT_SAMPLER_2D_RECT i32 #x8DCD)
(bind-val GL_INT_SAMPLER_BUFFER i32 #x8DD0)
(bind-val GL_UNSIGNED_INT_SAMPLER_2D_RECT i32 #x8DD5)
(bind-val GL_UNSIGNED_INT_SAMPLER_BUFFER i32 #x8DD8)
(bind-val GL_TEXTURE_BUFFER i32 #x8C2A)
(bind-val GL_MAX_TEXTURE_BUFFER_SIZE i32 #x8C2B)
(bind-val GL_TEXTURE_BINDING_BUFFER i32 #x8C2C)
(bind-val GL_TEXTURE_BUFFER_DATA_STORE_BINDING i32 #x8C2D)
(bind-val GL_TEXTURE_RECTANGLE i32 #x84F5)
(bind-val GL_TEXTURE_BINDING_RECTANGLE i32 #x84F6)
(bind-val GL_PROXY_TEXTURE_RECTANGLE i32 #x84F7)
(bind-val GL_MAX_RECTANGLE_TEXTURE_SIZE i32 #x84F8)
(bind-val GL_R8_SNORM i32 #x8F94)
(bind-val GL_RG8_SNORM i32 #x8F95)
(bind-val GL_RGB8_SNORM i32 #x8F96)
(bind-val GL_RGBA8_SNORM i32 #x8F97)
(bind-val GL_R16_SNORM i32 #x8F98)
(bind-val GL_RG16_SNORM i32 #x8F99)
(bind-val GL_RGB16_SNORM i32 #x8F9A)
(bind-val GL_RGBA16_SNORM i32 #x8F9B)
(bind-val GL_SIGNED_NORMALIZED i32 #x8F9C)
(bind-val GL_PRIMITIVE_RESTART i32 #x8F9D)
(bind-val GL_PRIMITIVE_RESTART_INDEX i32 #x8F9E)
(bind-val GL_COPY_READ_BUFFER i32 #x8F36)
(bind-val GL_COPY_WRITE_BUFFER i32 #x8F37)
(bind-val GL_UNIFORM_BUFFER i32 #x8A11)
(bind-val GL_UNIFORM_BUFFER_BINDING i32 #x8A28)
(bind-val GL_UNIFORM_BUFFER_START i32 #x8A29)
(bind-val GL_UNIFORM_BUFFER_SIZE i32 #x8A2A)
(bind-val GL_MAX_VERTEX_UNIFORM_BLOCKS i32 #x8A2B)
(bind-val GL_MAX_GEOMETRY_UNIFORM_BLOCKS i32 #x8A2C)
(bind-val GL_MAX_FRAGMENT_UNIFORM_BLOCKS i32 #x8A2D)
(bind-val GL_MAX_COMBINED_UNIFORM_BLOCKS i32 #x8A2E)
(bind-val GL_MAX_UNIFORM_BUFFER_BINDINGS i32 #x8A2F)
(bind-val GL_MAX_UNIFORM_BLOCK_SIZE i32 #x8A30)
(bind-val GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS i32 #x8A31)
(bind-val GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS i32 #x8A32)
(bind-val GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS i32 #x8A33)
(bind-val GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT i32 #x8A34)
(bind-val GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH i32 #x8A35)
(bind-val GL_ACTIVE_UNIFORM_BLOCKS i32 #x8A36)
(bind-val GL_UNIFORM_TYPE i32 #x8A37)
(bind-val GL_UNIFORM_SIZE i32 #x8A38)
(bind-val GL_UNIFORM_NAME_LENGTH i32 #x8A39)
(bind-val GL_UNIFORM_BLOCK_INDEX i32 #x8A3A)
(bind-val GL_UNIFORM_OFFSET i32 #x8A3B)
(bind-val GL_UNIFORM_ARRAY_STRIDE i32 #x8A3C)
(bind-val GL_UNIFORM_MATRIX_STRIDE i32 #x8A3D)
(bind-val GL_UNIFORM_IS_ROW_MAJOR i32 #x8A3E)
(bind-val GL_UNIFORM_BLOCK_BINDING i32 #x8A3F)
(bind-val GL_UNIFORM_BLOCK_DATA_SIZE i32 #x8A40)
(bind-val GL_UNIFORM_BLOCK_NAME_LENGTH i32 #x8A41)
(bind-val GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS i32 #x8A42)
(bind-val GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES i32 #x8A43)
(bind-val GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER i32 #x8A44)
(bind-val GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER i32 #x8A45)
(bind-val GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER i32 #x8A46)
(bind-val GL_INVALID_INDEX i32 #xFFFFFFFF)

;; void glDrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
(bind-gl-proc libGL glDrawArraysInstanced [void,GLenum,GLint,GLsizei,GLsizei]*)
;; void glDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, void* indices, GLsizei instancecount);
(bind-gl-proc libGL glDrawElementsInstanced [void,GLenum,GLsizei,GLenum,i8*,GLsizei]*)
;; void glTexBuffer(GLenum target, GLenum internalformat, GLuint buffer);
(bind-gl-proc libGL glTexBuffer [void,GLenum,GLenum,GLuint]*)
;; void glPrimitiveRestartIndex(GLuint index);
(bind-gl-proc libGL glPrimitiveRestartIndex [void,GLuint]*)
;; void glCopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
(bind-gl-proc libGL glCopyBufferSubData [void,GLenum,GLenum,GLintptr,GLintptr,GLsizeiptr]*)
;; void glGetUniformIndices(GLuint program, GLsizei uniformCount, GLchar** uniformNames, GLuint *uniformIndices);
(bind-gl-proc libGL glGetUniformIndices [void,GLuint,GLsizei,GLchar**,GLuint*]*)
;; void glGetActiveUniformsiv(GLuint program, GLsizei uniformCount, GLuint* uniformIndices, GLenum pname, GLint *params);
(bind-gl-proc libGL glGetActiveUniformsiv [void,GLuint,GLsizei,GLuint*,GLenum,GLint*]*)
;; void glGetActiveUniformName(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
(bind-gl-proc libGL glGetActiveUniformName [void,GLuint,GLuint,GLsizei,GLsizei*,GLchar*]*)
;; GLuint glGetUniformBlockIndex(GLuint program, GLchar* uniformBlockName);
(bind-gl-proc libGL glGetUniformBlockIndex [GLuint,GLuint,GLchar*]*)
;; void glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
(bind-gl-proc libGL glGetActiveUniformBlockiv [void,GLuint,GLuint,GLenum,GLint*]*)
;; void glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
(bind-gl-proc libGL glGetActiveUniformBlockName [void,GLuint,GLuint,GLsizei,GLsizei*,GLchar*]*)
;; void glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
(bind-gl-proc libGL glUniformBlockBinding [void,GLuint,GLuint,GLuint]*)
;; #endif /* GL_VERSION_3_1 */

;; if we're running, and not pre-compiling, we should also trigger the
;; init routine

(impc:aot:do-and-emit
 (if (not (impc:aot:currently-compiling?))
     (gl_init libGL)))

(impc:aot:insert-footer "xtmglcompat-getprocaddress")
(impc:aot:do-and-emit (define *xtmlib-gl-loaded* #t))
