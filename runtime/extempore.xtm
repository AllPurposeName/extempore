;; 
;; Copyright (c) 2011, Andrew Sorensen
;; 
;; All rights reserved.
;; 
;; 
;; Redistribution and use in source and binary forms, with or without 
;; modification, are permitted provided that the following conditions are met:
;; 
;; 1. Redistributions of source code must retain the above copyright notice, 
;;    this list of conditions and the following disclaimer.
;; 
;; 2. Redistributions in binary form must reproduce the above copyright notice,
;;    this list of conditions and the following disclaimer in the documentation 
;;    and/or other materials provided with the distribution.
;; 
;; Neither the name of the authors nor other contributors may be used to endorse
;; or promote products derived from this software without specific prior written 
;; permission.
;; 
;; 
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
;; ARE DISCLEXTD. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE 
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
;; POSSIBILITY OF SUCH DAMAGE.
;; 
;; 


;; extempore.xtm is loaded automatically by all processes on startup
;; extempore.xtm is for xtlang as scheme.xtm is for scheme.

(suppress-compiler-messages #t)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; SETUP NAN's
(bind-val NaNf float 0.0)
(bind-val NaNd double 0.0)

(bind-func __set_float_nans
  (lambda ()
    (let ((nan32 #x7FC00000)
          (nan64 #x7FFC000000000000)
          (n32:i32* (alloc))
          (n64:i64* (alloc)))
      (pset! n32 0 nan32)
      (pset! n64 0 nan64)
      (set! NaNf (pref (cast n32 float*) 0))
      (set! NaNd (pref (cast n64 double*) 0))
      void)))

(__set_float_nans)


;;;;;;;;;;;;; this for audio ;;;;;;;;;;;;;;;;;;
;; THESE ALL NEED TO BE CHANGED TOGETHER!!!!
(bind-alias SAMPLE float)
(bind-func audio_64bit (lambda () #f))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(bind-poly random imp_randf)
(bind-poly random imp_randd)

(bind-poly cos cosf)
(bind-poly cos cosd)
(bind-poly tan tanf)
(bind-poly tan tand)
(bind-poly sin sinf)
(bind-poly sin sind)
(bind-poly cosh coshf)
(bind-poly cosh coshd)
(bind-poly tanh tanhf)
(bind-poly tanh tanhd)
(bind-poly sinh sinhf)
(bind-poly sinh sinhd)
(bind-poly acos acosf)
(bind-poly acos acosd)
(bind-poly asin asinf)
(bind-poly asin asind)
(bind-poly atan atanf)
(bind-poly atan atand)
(bind-poly atan2 atan2f)
(bind-poly atan2 atan2d)
(bind-poly ceil ceilf)
(bind-poly ceil ceild)
(bind-poly floor floorf)
(bind-poly floor floord)
(bind-poly exp expf)
(bind-poly exp expd)
(bind-poly fmod fmodf)
(bind-poly fmod fmodd)
(bind-poly pow powf)
(bind-poly pow powd)
(bind-poly log logf)
(bind-poly log logd)
(bind-poly log2 log2f) 
(bind-poly log2 log2d) 
(bind-poly log10 log10f)
(bind-poly log10 log10d)
(bind-poly sqrt sqrtf)
(bind-poly sqrt sqrtd)
(bind-poly fabs fabsf)
(bind-poly fabs fabsd)

(suppress-compiler-messages #f)
