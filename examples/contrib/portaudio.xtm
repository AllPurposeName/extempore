;;; portaudio.xtm

;; Author: Ben Swift
;; Keywords: extempore
;; Required dylibs: libportaudio

;;; Commentary:

;; Pure xtlang bindings for Portaudio.

;;; Code:

(sys:load "libs/contrib/portaudio.xtm")

;; print avaliable devices
(call-as-xtlang
 (Pa_Initialize)
 (doloop (i (Pa_GetDeviceCount))
   (println "---- device" i "----")
   (println (Pa_GetDeviceInfo i) "\n")))

;; a callback function - generates white noise
(bind-func noisemaker:PaStreamCallback
  (lambda (input output frameCount timeInfo statusFlags userData)
    (doloop (i (* frameCount 2))
      (pset! (convert output float*) i (random 0.1)))
    ;; to ensure the callback continues to be called
    paContinue))

;; the output stream
(bind-val output_stream PaStream*)

;; create stereo output stream (default device)

(call-as-xtlang
 (let ((out_stream_ptr:PaStream** (salloc))
       (res 0))
   (set! res (Pa_OpenDefaultStream out_stream_ptr
                                   0
                                   2
                                   paFloat32
                                   44100.0
                                   (convert paFramesPerBufferUnspecified)
                                   (convert (get_native_fptr noisemaker))
                                   null))
   (if (<> res paNoError)
       (println "Error opening stream:" (String (Pa_GetErrorText res)))
       (begin
         (set! output_stream (pref out_stream_ptr 0))
         (set! res (Pa_StartStream output_stream))
         (if (<> res paNoError)
             (println "Error starting stream" (String (Pa_GetErrorText res)))
             (println "Sucessfully started stream..."))))))

;; shut it down
(call-as-xtlang
 (Pa_CloseStream output_stream)
 (Pa_Terminate))

;; specify device details

(call-as-xtlang
 ;; use default output device
 (let ((out_device (Pa_GetDefaultOutputDevice))
       (out_dev_info (Pa_GetDeviceInfo out_device))
       (out_params (PaStreamParameters out_device
                                       (tref out_dev_info 4) ;; maxOutputChannels
                                       paFloat32 ;; sampleFormat
                                       (tref out_dev_info 9) ;; defaultHighOutputLatency
                                       null))
       (out_stream_ptr:PaStream** (salloc))
       (res 0))
   (set! res (Pa_OpenStream out_stream_ptr
                            out_params
                            null
                            44100.0
                            (convert paFramesPerBufferUnspecified)
                            paNoFlag
                            (convert (get_native_fptr noisemaker))
                            null))
   (if (<> res paNoError)
       (println "Error opening stream:" (String (Pa_GetErrorText res)))
       (begin
         (set! output_stream (pref out_stream_ptr 0))
         (set! res (Pa_StartStream output_stream))
         (if (<> res paNoError)
             (println "Error starting stream" (String (Pa_GetErrorText res)))
             (println "Sucessfully started stream..."))))))
