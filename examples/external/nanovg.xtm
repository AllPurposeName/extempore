;;; nanovg.xtm:examples -- nanovg antialiased 2D graphics library example

;; Author: Ben Swift
;; Keywords: extempore
;; Required dylibs: libGL, libglfw3, libnanovg

;;; Commentary:

;; nanovg GH page: https://github.com/memononen/nanovg

;;; Code:

(sys:load "libs/external/glfw3.xtm")
(sys:load "libs/external/nanovg.xtm")

(bind-val winWidth i32 800 600)
(bind-val winHeight i32 800 600)
(bind-val fbWidth i32)
(bind-val fbHeight i32)
(bind-val pxRatio float)

(bind-val window GLFWwindow*)
(bind-val vg NVGcontext*)

;; create a window
(call-as-xtlang
 (glfwSetErrorCallback (convert (get_native_fptr glfw_error_callback)))
 (set! window (glfw_init_and_create_interaction_window winWidth winHeight))
 (set! vg (nvg_create_context)))

(call-as-xtlang
 (let ((w:i32* (alloc))
       (h:i32* (alloc)))
   (glfwGetWindowSize window w h)
   (set! winWidth (pref w 0))
   (set! winHeight (pref h 0))
   (glfwGetFramebufferSize window w h)
   (set! fbWidth (pref w 0))
   (set! fbHeight (pref h 0))
   (set! pxRatio (/ (convert fbWidth float) (convert winWidth float)))
   0))

(bind-func draw_frame
  (lambda ()
    (nvgBeginFrame vg winWidth winHeight pxRatio)
    ;; stuff goes here
    (nvgBeginPath vg)
    (nvgFillPaint vg
                  (nvgRadialGradient vg
                                     0. 0. 0. 0.
                                     (nvgRGBf 0. 0. 1.)
                                     (nvgRGBf 0. 1. 0.)))
    (nvgFillColor vg
                  (nvgRGBf 1. (random) 0.))
    (nvgRoundedRect vg 0. 0. (convert winWidth) (convert winHeight) (random 100. 500.))
    (nvgPathWinding vg NVG_CW)
    (nvgRoundedRect vg 100. 100. 300. (random 200. 1500.) 10.)
    (nvgFill vg)
    (nvgEndFrame vg)))

(bind-func gl_draw_loop
  (lambda (time:i64 delta_t:double)
    (glClear (bitwise-or GL_COLOR_BUFFER_BIT
                         GL_DEPTH_BUFFER_BIT
                         GL_STENCIL_BUFFER_BIT))
    (draw_frame)
    (glfwPollEvents)
    (glfwSwapBuffers window)
    (if (= (glfwWindowShouldClose window) 1)
        (begin
          (nvgDeleteGL3 vg)
          (glfwTerminate)
          #t)
        (let ((next_time (+ time (convert (* 44100. delta_t)))))
          (callback next_time gl_draw_loop next_time delta_t)))))

(bind-func gl_draw_loop
  (lambda (time:i64 delta_t:double)
    #f))

(gl_draw_loop (now) (/ 1.0 10.0)) ;; 30fps

;; what might a simple 2d GUI library look like?
